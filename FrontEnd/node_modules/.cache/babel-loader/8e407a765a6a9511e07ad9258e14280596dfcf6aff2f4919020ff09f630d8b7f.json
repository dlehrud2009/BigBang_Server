{"ast":null,"code":"var _jsxFileName = \"/Users/cellia/Desktop/bigbang/FrontEnd/src/components/ParticleCanvas.jsx\",\n  _s = $RefreshSig$();\n// src/components/ParticleCanvas.jsx\nimport { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { CSS2DRenderer } from \"three/examples/jsm/renderers/CSS2DRenderer\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport axios from \"axios\";\nimport { createSun, createPlanets } from \"../utils/solarSystem\";\nimport { generateGalaxy } from \"../utils/galaxyUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ParticleCanvas({\n  userid,\n  stage: serverStage,\n  status,\n  startSimulation,\n  pauseSimulation\n}) {\n  _s();\n  const mountRef = useRef();\n  const [localStage, setLocalStage] = useState(serverStage || \"bigbang\");\n\n  // 서버 stage와 동기화\n  useEffect(() => {\n    if (serverStage) setLocalStage(serverStage);\n  }, [serverStage]);\n\n  // 서버에 stage 업데이트 요청\n  const changeStage = async newStage => {\n    if (!userid) return;\n    try {\n      await axios.post(\"http://localhost:4000/api/simulation/stage\", {\n        userid,\n        stage: newStage\n      });\n      setLocalStage(newStage);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Three.js 초기화\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 5000);\n    camera.position.z = 600;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = \"absolute\";\n    labelRenderer.domElement.style.top = \"0\";\n    labelRenderer.domElement.style.pointerEvents = \"none\"; // canvas 위 이벤트 무시\n    mount.appendChild(labelRenderer.domElement);\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    controls.enableDamping = true;\n    controls.enablePan = false;\n    const pointLight = new THREE.PointLight(0xffffff, 3, 5000);\n    pointLight.position.set(0, 0, 0);\n    scene.add(pointLight);\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\n    scene.add(ambientLight);\n    let points = null;\n    let sun = null;\n    let planets = [];\n    const setupStage = stage => {\n      // 이전 오브젝트 제거\n      scene.children = scene.children.filter(obj => !(obj.userData.isPlanet || obj.userData.isSun || obj.userData.isOrbit || obj.userData.isBigBang || obj.userData.isGalaxy));\n      points = null;\n      sun = null;\n      planets = [];\n      if (stage === \"bigbang\" || stage === \"atom_formation\") {\n        const numParticles = 8000;\n        const geometry = new THREE.BufferGeometry();\n        const positions = new Float32Array(numParticles * 3);\n        const colors = new Float32Array(numParticles * 3);\n        const color = new THREE.Color();\n        for (let i = 0; i < numParticles; i++) {\n          positions[i * 3] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 1] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 2] = (Math.random() - 0.5) * 800;\n          const c = Math.random();\n          color.setRGB(c, c, c);\n          colors[i * 3] = color.r;\n          colors[i * 3 + 1] = color.g;\n          colors[i * 3 + 2] = color.b;\n        }\n        geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n        geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n        points = new THREE.Points(geometry, new THREE.PointsMaterial({\n          size: 2,\n          vertexColors: true\n        }));\n        points.userData.isBigBang = true;\n        scene.add(points);\n      }\n      if (stage === \"galaxy_formation\") {\n        points = generateGalaxy(5000);\n        points.userData.isGalaxy = true;\n        scene.add(points);\n      }\n      if (stage === \"solar_system\") {\n        sun = createSun();\n        scene.add(sun);\n        planets = createPlanets(scene);\n      }\n    };\n    setupStage(localStage);\n    const animate = () => {\n      if (status !== \"paused\") {\n        if (localStage === \"solar_system\" && sun) {\n          sun.rotation.y += 0.002;\n          planets.forEach(p => {\n            p.angle += p.speed;\n            p.mesh.position.x = p.radius * Math.cos(p.angle);\n            p.mesh.position.z = p.radius * Math.sin(p.angle);\n          });\n        } else if (points) {\n          points.rotation.z += 0.001;\n        }\n      }\n      controls.update();\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n      requestAnimationFrame(animate);\n    };\n    animate();\n    return () => {\n      renderer.dispose();\n      if (mount.contains(renderer.domElement)) mount.removeChild(renderer.domElement);\n      if (mount.contains(labelRenderer.domElement)) mount.removeChild(labelRenderer.domElement);\n    };\n  }, [localStage, status]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"600px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 10,\n        left: 10,\n        zIndex: 100,\n        display: \"flex\",\n        gap: \"8px\",\n        pointerEvents: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSimulation,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pauseSimulation,\n        children: status === \"paused\" ? \"Resume\" : \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeStage(\"bigbang\"),\n        children: \"BigBang\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeStage(\"galaxy_formation\"),\n        children: \"Galaxy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeStage(\"solar_system\"),\n        children: \"SolarSystem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleCanvas, \"/wPBgo9aJBL3DoKokws1I4VAPr0=\");\n_c = ParticleCanvas;\nvar _c;\n$RefreshReg$(_c, \"ParticleCanvas\");","map":{"version":3,"names":["useRef","useEffect","useState","THREE","CSS2DRenderer","OrbitControls","axios","createSun","createPlanets","generateGalaxy","jsxDEV","_jsxDEV","ParticleCanvas","userid","stage","serverStage","status","startSimulation","pauseSimulation","_s","mountRef","localStage","setLocalStage","changeStage","newStage","post","err","console","error","mount","current","width","clientWidth","height","clientHeight","scene","Scene","background","Color","camera","PerspectiveCamera","position","z","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","labelRenderer","style","top","pointerEvents","controls","enableDamping","enablePan","pointLight","PointLight","set","add","ambientLight","AmbientLight","points","sun","planets","setupStage","children","filter","obj","userData","isPlanet","isSun","isOrbit","isBigBang","isGalaxy","numParticles","geometry","BufferGeometry","positions","Float32Array","colors","color","i","Math","random","c","setRGB","r","g","b","setAttribute","BufferAttribute","Points","PointsMaterial","size","vertexColors","animate","rotation","y","forEach","p","angle","speed","mesh","x","radius","cos","sin","update","render","requestAnimationFrame","dispose","contains","removeChild","ref","fileName","_jsxFileName","lineNumber","columnNumber","left","zIndex","display","gap","onClick","_c","$RefreshReg$"],"sources":["/Users/cellia/Desktop/bigbang/FrontEnd/src/components/ParticleCanvas.jsx"],"sourcesContent":["// src/components/ParticleCanvas.jsx\nimport { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { CSS2DRenderer } from \"three/examples/jsm/renderers/CSS2DRenderer\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport axios from \"axios\";\nimport { createSun, createPlanets } from \"../utils/solarSystem\";\nimport { generateGalaxy } from \"../utils/galaxyUtils\";\n\nexport default function ParticleCanvas({ userid, stage: serverStage, status, startSimulation, pauseSimulation }) {\n  const mountRef = useRef();\n  const [localStage, setLocalStage] = useState(serverStage || \"bigbang\");\n\n  // 서버 stage와 동기화\n  useEffect(() => {\n    if (serverStage) setLocalStage(serverStage);\n  }, [serverStage]);\n\n  // 서버에 stage 업데이트 요청\n  const changeStage = async (newStage) => {\n    if (!userid) return;\n    try {\n      await axios.post(\"http://localhost:4000/api/simulation/stage\", {\n        userid,\n        stage: newStage,\n      });\n      setLocalStage(newStage);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Three.js 초기화\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 5000);\n    camera.position.z = 600;\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = \"absolute\";\n    labelRenderer.domElement.style.top = \"0\";\n    labelRenderer.domElement.style.pointerEvents = \"none\"; // canvas 위 이벤트 무시\n    mount.appendChild(labelRenderer.domElement);\n\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    controls.enableDamping = true;\n    controls.enablePan = false;\n\n    const pointLight = new THREE.PointLight(0xffffff, 3, 5000);\n    pointLight.position.set(0, 0, 0);\n    scene.add(pointLight);\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\n    scene.add(ambientLight);\n\n    let points = null;\n    let sun = null;\n    let planets = [];\n\n    const setupStage = (stage) => {\n      // 이전 오브젝트 제거\n      scene.children = scene.children.filter(obj => !(\n        obj.userData.isPlanet ||\n        obj.userData.isSun ||\n        obj.userData.isOrbit ||\n        obj.userData.isBigBang ||\n        obj.userData.isGalaxy\n      ));\n\n      points = null;\n      sun = null;\n      planets = [];\n\n      if (stage === \"bigbang\" || stage === \"atom_formation\") {\n        const numParticles = 8000;\n        const geometry = new THREE.BufferGeometry();\n        const positions = new Float32Array(numParticles * 3);\n        const colors = new Float32Array(numParticles * 3);\n        const color = new THREE.Color();\n\n        for (let i = 0; i < numParticles; i++) {\n          positions[i * 3] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 1] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 2] = (Math.random() - 0.5) * 800;\n          const c = Math.random();\n          color.setRGB(c, c, c);\n          colors[i * 3] = color.r;\n          colors[i * 3 + 1] = color.g;\n          colors[i * 3 + 2] = color.b;\n        }\n\n        geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n        geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n\n        points = new THREE.Points(\n          geometry,\n          new THREE.PointsMaterial({ size: 2, vertexColors: true })\n        );\n        points.userData.isBigBang = true;\n        scene.add(points);\n      }\n\n      if (stage === \"galaxy_formation\") {\n        points = generateGalaxy(5000);\n        points.userData.isGalaxy = true;\n        scene.add(points);\n      }\n\n      if (stage === \"solar_system\") {\n        sun = createSun();\n        scene.add(sun);\n        planets = createPlanets(scene);\n      }\n    };\n\n    setupStage(localStage);\n\n    const animate = () => {\n      if (status !== \"paused\") {\n        if (localStage === \"solar_system\" && sun) {\n          sun.rotation.y += 0.002;\n          planets.forEach(p => {\n            p.angle += p.speed;\n            p.mesh.position.x = p.radius * Math.cos(p.angle);\n            p.mesh.position.z = p.radius * Math.sin(p.angle);\n          });\n        } else if (points) {\n          points.rotation.z += 0.001;\n        }\n      }\n      controls.update();\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n      requestAnimationFrame(animate);\n    };\n    animate();\n\n    return () => {\n      renderer.dispose();\n      if (mount.contains(renderer.domElement)) mount.removeChild(renderer.domElement);\n      if (mount.contains(labelRenderer.domElement)) mount.removeChild(labelRenderer.domElement);\n    };\n  }, [localStage, status]);\n\n  return (\n    <div style={{ position: \"relative\", width: \"100%\", height: \"600px\" }}>\n      <div ref={mountRef} style={{ width: \"100%\", height: \"100%\" }} />\n      <div\n        style={{\n          position: \"absolute\",\n          top: 10,\n          left: 10,\n          zIndex: 100,\n          display: \"flex\",\n          gap: \"8px\",\n          pointerEvents: \"auto\",\n        }}\n      >\n        <button onClick={startSimulation}>Start</button>\n        <button onClick={pauseSimulation}>\n          {status === \"paused\" ? \"Resume\" : \"Pause\"}\n        </button>\n        <button onClick={() => changeStage(\"bigbang\")}>BigBang</button>\n        <button onClick={() => changeStage(\"galaxy_formation\")}>Galaxy</button>\n        <button onClick={() => changeStage(\"solar_system\")}>SolarSystem</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
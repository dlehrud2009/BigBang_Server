{"ast":null,"code":"var _jsxFileName = \"/Users/cellia/Desktop/bigbang/FrontEnd/src/components/UniverseSimulation.jsx\",\n  _s = $RefreshSig$();\n// src/components/UniverseSimulation.jsx\nimport { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STAGES = [\"quark\", \"proton_neutron\", \"helium_nucleus\", \"atom\", \"star\", \"galaxy\"];\n\n// 랜덤 위치\nconst randomPos = (spread = 200) => [(Math.random() - 0.5) * spread, (Math.random() - 0.5) * spread, (Math.random() - 0.5) * spread];\n\n// 입자 생성\nconst createParticle = (color, pos) => {\n  const geom = new THREE.SphereGeometry(2, 8, 8);\n  const mat = new THREE.MeshStandardMaterial({\n    color\n  });\n  const mesh = new THREE.Mesh(geom, mat);\n  mesh.position.set(...pos);\n  return mesh;\n};\n\n// 끌어당기는 힘\nconst attract = (mesh, target, factor = 0.02) => {\n  mesh.position.x += (target.x - mesh.position.x) * factor;\n  mesh.position.y += (target.y - mesh.position.y) * factor;\n  mesh.position.z += (target.z - mesh.position.z) * factor;\n};\nexport default function UniverseSimulation() {\n  _s();\n  const mountRef = useRef();\n  const [stageIndex, setStageIndex] = useState(0);\n  const [particles, setParticles] = useState([]);\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 5000);\n    camera.position.z = 400;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    const light = new THREE.PointLight(0xffffff, 1);\n    light.position.set(0, 0, 200);\n    scene.add(light);\n    scene.add(new THREE.AmbientLight(0xffffff, 0.5));\n    let objs = [];\n    const setupStage = () => {\n      // 기존 객체 제거\n      objs.forEach(o => scene.remove(o.mesh));\n      objs = [];\n      const stage = STAGES[stageIndex];\n      if (stage === \"quark\") {\n        for (let i = 0; i < 50; i++) objs.push({\n          mesh: createParticle(0xff0000, randomPos()),\n          type: \"quark\"\n        });\n        for (let i = 0; i < 50; i++) objs.push({\n          mesh: createParticle(0x00ff00, randomPos()),\n          type: \"electron\"\n        });\n      }\n      if (stage === \"proton_neutron\") {\n        objs.push(...Array.from({\n          length: 30\n        }, () => ({\n          mesh: createParticle(0x0000ff, randomPos()),\n          type: \"proton\",\n          target: new THREE.Vector3(0, 0, 0)\n        })));\n        objs.push(...Array.from({\n          length: 30\n        }, () => ({\n          mesh: createParticle(0xffff00, randomPos()),\n          type: \"neutron\",\n          target: new THREE.Vector3(0, 0, 0)\n        })));\n      }\n      if (stage === \"helium_nucleus\") {\n        objs.push({\n          mesh: createParticle(0x0000ff, [-5, 0, 0]),\n          type: \"proton\",\n          target: new THREE.Vector3(0, 0, 0)\n        });\n        objs.push({\n          mesh: createParticle(0x0000ff, [5, 0, 0]),\n          type: \"proton\",\n          target: new THREE.Vector3(0, 0, 0)\n        });\n        objs.push({\n          mesh: createParticle(0xffff00, [-2, 5, 0]),\n          type: \"neutron\",\n          target: new THREE.Vector3(0, 0, 0)\n        });\n        objs.push({\n          mesh: createParticle(0xffff00, [2, 5, 0]),\n          type: \"neutron\",\n          target: new THREE.Vector3(0, 0, 0)\n        });\n      }\n      if (stage === \"atom\") {\n        objs.push({\n          mesh: createParticle(0x0000ff, [0, 0, 0]),\n          type: \"proton\"\n        });\n        objs.push({\n          mesh: createParticle(0xffff00, [2, 2, 0]),\n          type: \"neutron\"\n        });\n        objs.push({\n          mesh: createParticle(0x00ff00, [20, 0, 0]),\n          type: \"electron\",\n          orbitRadius: 20,\n          angle: Math.random() * Math.PI * 2,\n          speed: 0.05\n        });\n      }\n      if (stage === \"star\") {\n        for (let i = 0; i < 20; i++) objs.push({\n          mesh: createParticle(0xffaa00, randomPos(100)),\n          type: \"star\"\n        });\n      }\n      if (stage === \"galaxy\") {\n        for (let i = 0; i < 200; i++) {\n          const radius = Math.random() * 200;\n          objs.push({\n            mesh: createParticle(0xffffff, randomPos(400)),\n            type: \"star\",\n            angle: Math.random() * Math.PI * 2,\n            radius,\n            speed: 0.002 + Math.random() * 0.003\n          });\n        }\n      }\n      objs.forEach(o => scene.add(o.mesh));\n      setParticles(objs);\n    };\n    setupStage();\n    let frameId;\n    const animate = () => {\n      const stage = STAGES[stageIndex];\n      objs.forEach(p => {\n        if ((stage === \"proton_neutron\" || stage === \"helium_nucleus\") && p.target) attract(p.mesh, p.target, 0.05);\n        if (stage === \"atom\" && p.type === \"electron\") {\n          p.angle += p.speed;\n          p.mesh.position.x = Math.cos(p.angle) * p.orbitRadius;\n          p.mesh.position.y = Math.sin(p.angle) * p.orbitRadius;\n        }\n        if (stage === \"galaxy\" && p.type === \"star\") {\n          p.angle += p.speed;\n          p.mesh.position.x = Math.cos(p.angle) * p.radius;\n          p.mesh.position.y = Math.sin(p.angle) * p.radius;\n        }\n      });\n      controls.update();\n      renderer.render(scene, camera);\n      frameId = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => {\n      cancelAnimationFrame(frameId);\n      renderer.dispose();\n      mount.removeChild(renderer.domElement);\n    };\n  }, [stageIndex]);\n  const nextStage = () => setStageIndex(prev => (prev + 1) % STAGES.length);\n  const prevStage = () => setStageIndex(prev => (prev - 1 + STAGES.length) % STAGES.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"600px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 10,\n        left: 10,\n        display: \"flex\",\n        gap: \"8px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevStage,\n        children: \"Prev Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextStage,\n        children: \"Next Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(UniverseSimulation, \"TPMHXGG/lUEpwQGxNexXuKhxyTc=\");\n_c = UniverseSimulation;\nvar _c;\n$RefreshReg$(_c, \"UniverseSimulation\");","map":{"version":3,"names":["useRef","useEffect","useState","THREE","OrbitControls","jsxDEV","_jsxDEV","STAGES","randomPos","spread","Math","random","createParticle","color","pos","geom","SphereGeometry","mat","MeshStandardMaterial","mesh","Mesh","position","set","attract","target","factor","x","y","z","UniverseSimulation","_s","mountRef","stageIndex","setStageIndex","particles","setParticles","mount","current","width","clientWidth","height","clientHeight","scene","Scene","background","Color","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","controls","enableDamping","light","PointLight","add","AmbientLight","objs","setupStage","forEach","o","remove","stage","i","push","type","Array","from","length","Vector3","orbitRadius","angle","PI","speed","radius","frameId","animate","p","cos","sin","update","render","requestAnimationFrame","cancelAnimationFrame","dispose","removeChild","nextStage","prev","prevStage","style","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","top","left","display","gap","onClick","_c","$RefreshReg$"],"sources":["/Users/cellia/Desktop/bigbang/FrontEnd/src/components/UniverseSimulation.jsx"],"sourcesContent":["// src/components/UniverseSimulation.jsx\nimport { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nconst STAGES = [\"quark\", \"proton_neutron\", \"helium_nucleus\", \"atom\", \"star\", \"galaxy\"];\n\n// 랜덤 위치\nconst randomPos = (spread = 200) => [\n  (Math.random() - 0.5) * spread,\n  (Math.random() - 0.5) * spread,\n  (Math.random() - 0.5) * spread,\n];\n\n// 입자 생성\nconst createParticle = (color, pos) => {\n  const geom = new THREE.SphereGeometry(2, 8, 8);\n  const mat = new THREE.MeshStandardMaterial({ color });\n  const mesh = new THREE.Mesh(geom, mat);\n  mesh.position.set(...pos);\n  return mesh;\n};\n\n// 끌어당기는 힘\nconst attract = (mesh, target, factor = 0.02) => {\n  mesh.position.x += (target.x - mesh.position.x) * factor;\n  mesh.position.y += (target.y - mesh.position.y) * factor;\n  mesh.position.z += (target.z - mesh.position.z) * factor;\n};\n\nexport default function UniverseSimulation() {\n  const mountRef = useRef();\n  const [stageIndex, setStageIndex] = useState(0);\n  const [particles, setParticles] = useState([]);\n\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 5000);\n    camera.position.z = 400;\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n\n    const light = new THREE.PointLight(0xffffff, 1);\n    light.position.set(0, 0, 200);\n    scene.add(light);\n    scene.add(new THREE.AmbientLight(0xffffff, 0.5));\n\n    let objs = [];\n\n    const setupStage = () => {\n      // 기존 객체 제거\n      objs.forEach(o => scene.remove(o.mesh));\n      objs = [];\n\n      const stage = STAGES[stageIndex];\n\n      if (stage === \"quark\") {\n        for (let i = 0; i < 50; i++) objs.push({ mesh: createParticle(0xff0000, randomPos()), type: \"quark\" });\n        for (let i = 0; i < 50; i++) objs.push({ mesh: createParticle(0x00ff00, randomPos()), type: \"electron\" });\n      }\n\n      if (stage === \"proton_neutron\") {\n        objs.push(...Array.from({ length: 30 }, () => ({ mesh: createParticle(0x0000ff, randomPos()), type: \"proton\", target: new THREE.Vector3(0,0,0) })));\n        objs.push(...Array.from({ length: 30 }, () => ({ mesh: createParticle(0xffff00, randomPos()), type: \"neutron\", target: new THREE.Vector3(0,0,0) })));\n      }\n\n      if (stage === \"helium_nucleus\") {\n        objs.push({ mesh: createParticle(0x0000ff, [-5,0,0]), type: \"proton\", target: new THREE.Vector3(0,0,0) });\n        objs.push({ mesh: createParticle(0x0000ff, [5,0,0]), type: \"proton\", target: new THREE.Vector3(0,0,0) });\n        objs.push({ mesh: createParticle(0xffff00, [-2,5,0]), type: \"neutron\", target: new THREE.Vector3(0,0,0) });\n        objs.push({ mesh: createParticle(0xffff00, [2,5,0]), type: \"neutron\", target: new THREE.Vector3(0,0,0) });\n      }\n\n      if (stage === \"atom\") {\n        objs.push({ mesh: createParticle(0x0000ff, [0,0,0]), type: \"proton\" });\n        objs.push({ mesh: createParticle(0xffff00, [2,2,0]), type: \"neutron\" });\n        objs.push({ mesh: createParticle(0x00ff00, [20,0,0]), type: \"electron\", orbitRadius: 20, angle: Math.random()*Math.PI*2, speed: 0.05 });\n      }\n\n      if (stage === \"star\") {\n        for (let i = 0; i < 20; i++) objs.push({ mesh: createParticle(0xffaa00, randomPos(100)), type: \"star\" });\n      }\n\n      if (stage === \"galaxy\") {\n        for (let i = 0; i < 200; i++) {\n          const radius = Math.random()*200;\n          objs.push({ mesh: createParticle(0xffffff, randomPos(400)), type: \"star\", angle: Math.random()*Math.PI*2, radius, speed: 0.002+Math.random()*0.003 });\n        }\n      }\n\n      objs.forEach(o => scene.add(o.mesh));\n      setParticles(objs);\n    };\n\n    setupStage();\n\n    let frameId;\n    const animate = () => {\n      const stage = STAGES[stageIndex];\n\n      objs.forEach(p => {\n        if ((stage === \"proton_neutron\" || stage === \"helium_nucleus\") && p.target) attract(p.mesh, p.target, 0.05);\n        if (stage === \"atom\" && p.type === \"electron\") {\n          p.angle += p.speed;\n          p.mesh.position.x = Math.cos(p.angle) * p.orbitRadius;\n          p.mesh.position.y = Math.sin(p.angle) * p.orbitRadius;\n        }\n        if (stage === \"galaxy\" && p.type === \"star\") {\n          p.angle += p.speed;\n          p.mesh.position.x = Math.cos(p.angle) * p.radius;\n          p.mesh.position.y = Math.sin(p.angle) * p.radius;\n        }\n      });\n\n      controls.update();\n      renderer.render(scene, camera);\n      frameId = requestAnimationFrame(animate);\n    };\n    animate();\n\n    return () => {\n      cancelAnimationFrame(frameId);\n      renderer.dispose();\n      mount.removeChild(renderer.domElement);\n    };\n  }, [stageIndex]);\n\n  const nextStage = () => setStageIndex(prev => (prev + 1) % STAGES.length);\n  const prevStage = () => setStageIndex(prev => (prev - 1 + STAGES.length) % STAGES.length);\n\n  return (\n    <div style={{ position: \"relative\", width: \"100%\", height: \"600px\" }}>\n      <div ref={mountRef} style={{ width: \"100%\", height: \"100%\" }} />\n      <div style={{ position: \"absolute\", top: 10, left: 10, display: \"flex\", gap: \"8px\" }}>\n        <button onClick={prevStage}>Prev Stage</button>\n        <button onClick={nextStage}>Next Stage</button>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/cellia/Desktop/bigbang/FrontEnd/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport ParticleCanvas from \"./components/ParticleCanvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [userid, setUserId] = useState(null);\n  const [stage, setStage] = useState(\"bigbang\");\n  const [status, setStatus] = useState(\"paused\");\n\n  // ------------------------\n  // 접속 시 사용자 생성\n  // ------------------------\n  useEffect(() => {\n    const initUser = async () => {\n      try {\n        const res = await axios.post(\"http://localhost:4000/api/user\", {\n          username: \"Guest\"\n        });\n        setUserId(res.data.userid);\n        setStage(res.data.stage);\n        setStatus(res.data.status);\n      } catch (err) {\n        console.error(\"사용자 생성 실패:\", err);\n      }\n    };\n    initUser();\n  }, []);\n\n  // ------------------------\n  // 시뮬레이션 일시정지 / 재개\n  // ------------------------\n  const pauseSimulation = async () => {\n    if (!userid) return;\n    try {\n      const res = await axios.post(\"http://localhost:4000/api/simulation/pause\", {\n        userid\n      });\n      setStatus(res.data.status);\n      setStage(res.data.stage);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // ------------------------\n  // 스테이지 전환\n  // ------------------------\n  const changeStage = async targetStage => {\n    if (!userid) return;\n    try {\n      let endpoint = \"\";\n      const order = [\"bigbang\", \"galaxy_formation\", \"solar_system\"];\n      const currentIndex = order.indexOf(stage);\n      if (targetStage === \"bigbang\") {\n        endpoint = currentIndex > 0 ? `/api/simulation/prev/${userid}` : \"\";\n      } else if (targetStage === \"galaxy_formation\") {\n        if (currentIndex < 1) endpoint = `/api/simulation/next/${userid}`;else if (currentIndex > 1) endpoint = `/api/simulation/prev/${userid}`;\n      } else if (targetStage === \"solar_system\") {\n        endpoint = currentIndex < 2 ? `/api/simulation/next/${userid}` : \"\";\n      }\n      if (!endpoint) return;\n      const res = await axios.post(`http://localhost:4000${endpoint}`);\n      setStage(res.data.stage);\n      setStatus(res.data.status || \"started\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const startSimulation = () => {\n    setStatus(\"started\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BigBang Simulator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleCanvas, {\n      userid: userid,\n      stage: stage,\n      status: status,\n      startSimulation: startSimulation,\n      pauseSimulation: pauseSimulation,\n      changeStage: changeStage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xq8PxXk8U6ATGZF81807vF/dk8Q=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","axios","ParticleCanvas","jsxDEV","_jsxDEV","App","_s","userid","setUserId","stage","setStage","status","setStatus","initUser","res","post","username","data","err","console","error","pauseSimulation","changeStage","targetStage","endpoint","order","currentIndex","indexOf","startSimulation","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cellia/Desktop/bigbang/FrontEnd/src/App.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport ParticleCanvas from \"./components/ParticleCanvas\";\n\nexport default function App() {\n  const [userid, setUserId] = useState(null);\n  const [stage, setStage] = useState(\"bigbang\");\n  const [status, setStatus] = useState(\"paused\");\n\n  // ------------------------\n  // 접속 시 사용자 생성\n  // ------------------------\n  useEffect(() => {\n    const initUser = async () => {\n      try {\n        const res = await axios.post(\"http://localhost:4000/api/user\", {\n          username: \"Guest\",\n        });\n        setUserId(res.data.userid);\n        setStage(res.data.stage);\n        setStatus(res.data.status);\n      } catch (err) {\n        console.error(\"사용자 생성 실패:\", err);\n      }\n    };\n    initUser();\n  }, []);\n\n  // ------------------------\n  // 시뮬레이션 일시정지 / 재개\n  // ------------------------\n  const pauseSimulation = async () => {\n    if (!userid) return;\n    try {\n      const res = await axios.post(\"http://localhost:4000/api/simulation/pause\", { userid });\n      setStatus(res.data.status);\n      setStage(res.data.stage);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // ------------------------\n  // 스테이지 전환\n  // ------------------------\n  const changeStage = async (targetStage) => {\n    if (!userid) return;\n    try {\n      let endpoint = \"\";\n      const order = [\"bigbang\", \"galaxy_formation\", \"solar_system\"];\n      const currentIndex = order.indexOf(stage);\n\n      if (targetStage === \"bigbang\") {\n        endpoint = currentIndex > 0 ? `/api/simulation/prev/${userid}` : \"\";\n      } else if (targetStage === \"galaxy_formation\") {\n        if (currentIndex < 1) endpoint = `/api/simulation/next/${userid}`;\n        else if (currentIndex > 1) endpoint = `/api/simulation/prev/${userid}`;\n      } else if (targetStage === \"solar_system\") {\n        endpoint = currentIndex < 2 ? `/api/simulation/next/${userid}` : \"\";\n      }\n\n      if (!endpoint) return;\n\n      const res = await axios.post(`http://localhost:4000${endpoint}`);\n      setStage(res.data.stage);\n      setStatus(res.data.status || \"started\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const startSimulation = () => {\n    setStatus(\"started\");\n  };\n\n  return (\n    <div>\n      <h1>BigBang Simulator</h1>\n      <ParticleCanvas\n        userid={userid}\n        stage={stage}\n        status={status}\n        startSimulation={startSimulation}\n        pauseSimulation={pauseSimulation}\n        changeStage={changeStage}\n      />\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
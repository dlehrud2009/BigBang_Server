{"ast":null,"code":"var _jsxFileName = \"/Users/cellia/Desktop/bigbang/FrontEnd/src/components/ParticleCanvas.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/components/ParticleCanvas.jsx\nimport { useRef, useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { CSS2DRenderer } from \"three/examples/jsm/renderers/CSS2DRenderer\";\nimport { createSun, createPlanets } from \"../utils/solarSystem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ParticleCanvas({\n  stage,\n  setStage\n}) {\n  _s();\n  const mountRef = useRef();\n  const handleStageChange = newStage => setStage(newStage);\n\n  // üåå Î∏îÎûôÌôÄ Ï§ëÏã¨ ÏùÄÌïò ÏÉùÏÑ± Ìï®Ïàò\n  const generateBlackHoleGalaxy = (numParticles = 200000, radius = 5000) => {\n    const group = new THREE.Group();\n\n    // ‚≠ê Î≥Ñ Íµ¨Î¶Ñ\n    const geometry = new THREE.BufferGeometry();\n    const positions = new Float32Array(numParticles * 3);\n    const colors = new Float32Array(numParticles * 3);\n    const color = new THREE.Color();\n    for (let i = 0; i < numParticles; i++) {\n      const r = Math.random() * radius;\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(Math.random() * 2 - 1);\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = r * Math.sin(phi) * Math.sin(theta) * 0.3; // ÏñáÏùÄ ÏõêÎ∞ò ÎäêÎÇå\n      const z = r * Math.cos(phi);\n      positions[i * 3] = x;\n      positions[i * 3 + 1] = y;\n      positions[i * 3 + 2] = z;\n      const palette = [0x88ccff, 0xaa88ff, 0xff88cc, 0xffffff];\n      color.setHex(palette[Math.floor(Math.random() * palette.length)]);\n      colors[i * 3] = color.r;\n      colors[i * 3 + 1] = color.g;\n      colors[i * 3 + 2] = color.b;\n    }\n    geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n    geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n    const stars = new THREE.Points(geometry, new THREE.PointsMaterial({\n      size: 2,\n      vertexColors: true,\n      blending: THREE.AdditiveBlending,\n      transparent: true,\n      opacity: 0.9\n    }));\n    group.add(stars);\n\n    // üåå Ï§ëÏïô Î∏îÎûôÌôÄ (ÎπõÎÇòÎäî ÏΩîÏñ¥)\n    const core = new THREE.Mesh(new THREE.SphereGeometry(50, 32, 32), new THREE.MeshBasicMaterial({\n      color: 0xffffff,\n      transparent: true,\n      opacity: 0.9\n    }));\n    group.add(core);\n\n    // üåå Ï†úÌä∏ Ìö®Í≥º (ÏúÑÏïÑÎûò ÎªóÎäî Îπî)\n    const jetMaterial = new THREE.MeshBasicMaterial({\n      color: 0x99ccff,\n      transparent: true,\n      opacity: 0.7\n    });\n    const jetGeometry = new THREE.CylinderGeometry(5, 30, 1000, 32, 1, true);\n    const jetUp = new THREE.Mesh(jetGeometry, jetMaterial);\n    jetUp.position.y = 500;\n    group.add(jetUp);\n    const jetDown = new THREE.Mesh(jetGeometry, jetMaterial);\n    jetDown.position.y = -500;\n    group.add(jetDown);\n    group.userData.isStageObject = true;\n    return group;\n  };\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 10000);\n    camera.position.z = 2000;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = \"absolute\";\n    labelRenderer.domElement.style.top = \"0\";\n    mount.appendChild(labelRenderer.domElement);\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    controls.enableDamping = true;\n    controls.enablePan = false;\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\n    scene.add(ambientLight);\n    let stageObject = null;\n    let sun = null;\n    let planets = [];\n    const setupStage = () => {\n      scene.children.filter(obj => obj.userData.isStageObject).forEach(obj => scene.remove(obj));\n      stageObject = null;\n      sun = null;\n      planets = [];\n      if (stage === \"bigbang\") {\n        // üåç Íµ¨ ÏïàÏóêÏÑú ÏûÖÏûê ÏÉùÏÑ±\n        const geometry = new THREE.BufferGeometry();\n        const numParticles = 800000;\n        const positions = new Float32Array(numParticles * 3);\n        const colors = new Float32Array(numParticles * 3);\n        const color = new THREE.Color();\n        for (let i = 0; i < numParticles; i++) {\n          const r = Math.random() * 3000;\n          const theta = Math.random() * Math.PI * 2;\n          const phi = Math.random() * Math.PI;\n          positions[i * 3] = r * Math.sin(phi) * Math.cos(theta);\n          positions[i * 3 + 1] = r * Math.sin(phi) * Math.sin(theta);\n          positions[i * 3 + 2] = r * Math.cos(phi);\n          const c = Math.random();\n          color.setRGB(c, c, c);\n          colors[i * 3] = color.r;\n          colors[i * 3 + 1] = color.g;\n          colors[i * 3 + 2] = color.b;\n        }\n        geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n        geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n        stageObject = new THREE.Points(geometry, new THREE.PointsMaterial({\n          size: 2,\n          vertexColors: true\n        }));\n        stageObject.userData.isStageObject = true;\n        scene.add(stageObject);\n      }\n      if (stage === \"galaxy_formation\") {\n        stageObject = generateBlackHoleGalaxy(400000);\n        scene.add(stageObject);\n      }\n      if (stage === \"solar_system\") {\n        sun = createSun();\n        sun.userData.isStageObject = true;\n        scene.add(sun);\n        planets = createPlanets(scene);\n        planets.forEach(p => {\n          p.mesh.userData.isStageObject = true;\n        });\n      }\n    };\n    setupStage();\n    let frameId;\n    const animate = () => {\n      if (stage === \"solar_system\" && sun) {\n        sun.rotation.y += 0.002;\n        planets.forEach(p => {\n          p.angle += p.speed;\n          p.mesh.position.x = p.radius * Math.cos(p.angle);\n          p.mesh.position.z = p.radius * Math.sin(p.angle);\n        });\n      } else if ((stage === \"bigbang\" || stage === \"galaxy_formation\") && stageObject) {\n        stageObject.rotation.y += 0.0005;\n      }\n      controls.update();\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n      frameId = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => {\n      cancelAnimationFrame(frameId);\n      renderer.dispose();\n      mount.removeChild(renderer.domElement);\n      mount.removeChild(labelRenderer.domElement);\n    };\n  }, [stage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"600px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 10,\n        left: 10,\n        zIndex: 100,\n        display: \"flex\",\n        gap: \"8px\",\n        pointerEvents: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleStageChange(\"bigbang\"),\n        children: \"BigBang\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleStageChange(\"galaxy_formation\"),\n        children: \"Galaxy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleStageChange(\"solar_system\"),\n        children: \"SolarSystem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleCanvas, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ParticleCanvas;\nvar _c;\n$RefreshReg$(_c, \"ParticleCanvas\");","map":{"version":3,"names":["useRef","useEffect","THREE","OrbitControls","CSS2DRenderer","createSun","createPlanets","jsxDEV","_jsxDEV","ParticleCanvas","stage","setStage","_s","mountRef","handleStageChange","newStage","generateBlackHoleGalaxy","numParticles","radius","group","Group","geometry","BufferGeometry","positions","Float32Array","colors","color","Color","i","r","Math","random","theta","PI","phi","acos","x","sin","cos","y","z","palette","setHex","floor","length","g","b","setAttribute","BufferAttribute","stars","Points","PointsMaterial","size","vertexColors","blending","AdditiveBlending","transparent","opacity","add","core","Mesh","SphereGeometry","MeshBasicMaterial","jetMaterial","jetGeometry","CylinderGeometry","jetUp","position","jetDown","userData","isStageObject","mount","current","width","clientWidth","height","clientHeight","scene","Scene","background","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","labelRenderer","style","top","controls","enableDamping","enablePan","ambientLight","AmbientLight","stageObject","sun","planets","setupStage","children","filter","obj","forEach","remove","c","setRGB","p","mesh","frameId","animate","rotation","angle","speed","update","render","requestAnimationFrame","cancelAnimationFrame","dispose","removeChild","ref","fileName","_jsxFileName","lineNumber","columnNumber","left","zIndex","display","gap","pointerEvents","onClick","_c","$RefreshReg$"],"sources":["/Users/cellia/Desktop/bigbang/FrontEnd/src/components/ParticleCanvas.jsx"],"sourcesContent":["// frontend/src/components/ParticleCanvas.jsx\nimport { useRef, useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { CSS2DRenderer } from \"three/examples/jsm/renderers/CSS2DRenderer\";\nimport { createSun, createPlanets } from \"../utils/solarSystem\";\n\nexport default function ParticleCanvas({ stage, setStage }) {\n  const mountRef = useRef();\n\n  const handleStageChange = (newStage) => setStage(newStage);\n\n  // üåå Î∏îÎûôÌôÄ Ï§ëÏã¨ ÏùÄÌïò ÏÉùÏÑ± Ìï®Ïàò\n  const generateBlackHoleGalaxy = (numParticles = 200000, radius = 5000) => {\n    const group = new THREE.Group();\n\n    // ‚≠ê Î≥Ñ Íµ¨Î¶Ñ\n    const geometry = new THREE.BufferGeometry();\n    const positions = new Float32Array(numParticles * 3);\n    const colors = new Float32Array(numParticles * 3);\n    const color = new THREE.Color();\n\n    for (let i = 0; i < numParticles; i++) {\n      const r = Math.random() * radius;\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos((Math.random() * 2) - 1);\n\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = r * Math.sin(phi) * Math.sin(theta) * 0.3; // ÏñáÏùÄ ÏõêÎ∞ò ÎäêÎÇå\n      const z = r * Math.cos(phi);\n\n      positions[i * 3] = x;\n      positions[i * 3 + 1] = y;\n      positions[i * 3 + 2] = z;\n\n      const palette = [0x88ccff, 0xaa88ff, 0xff88cc, 0xffffff];\n      color.setHex(palette[Math.floor(Math.random() * palette.length)]);\n      colors[i * 3] = color.r;\n      colors[i * 3 + 1] = color.g;\n      colors[i * 3 + 2] = color.b;\n    }\n\n    geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n    geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n\n    const stars = new THREE.Points(\n      geometry,\n      new THREE.PointsMaterial({\n        size: 2,\n        vertexColors: true,\n        blending: THREE.AdditiveBlending,\n        transparent: true,\n        opacity: 0.9,\n      })\n    );\n    group.add(stars);\n\n    // üåå Ï§ëÏïô Î∏îÎûôÌôÄ (ÎπõÎÇòÎäî ÏΩîÏñ¥)\n    const core = new THREE.Mesh(\n      new THREE.SphereGeometry(50, 32, 32),\n      new THREE.MeshBasicMaterial({\n        color: 0xffffff,\n        transparent: true,\n        opacity: 0.9,\n      })\n    );\n    group.add(core);\n\n    // üåå Ï†úÌä∏ Ìö®Í≥º (ÏúÑÏïÑÎûò ÎªóÎäî Îπî)\n    const jetMaterial = new THREE.MeshBasicMaterial({\n      color: 0x99ccff,\n      transparent: true,\n      opacity: 0.7,\n    });\n    const jetGeometry = new THREE.CylinderGeometry(5, 30, 1000, 32, 1, true);\n\n    const jetUp = new THREE.Mesh(jetGeometry, jetMaterial);\n    jetUp.position.y = 500;\n    group.add(jetUp);\n\n    const jetDown = new THREE.Mesh(jetGeometry, jetMaterial);\n    jetDown.position.y = -500;\n    group.add(jetDown);\n\n    group.userData.isStageObject = true;\n    return group;\n  };\n\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 10000);\n    camera.position.z = 2000;\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = \"absolute\";\n    labelRenderer.domElement.style.top = \"0\";\n    mount.appendChild(labelRenderer.domElement);\n\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    controls.enableDamping = true;\n    controls.enablePan = false;\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\n    scene.add(ambientLight);\n\n    let stageObject = null;\n    let sun = null;\n    let planets = [];\n\n    const setupStage = () => {\n      scene.children\n        .filter((obj) => obj.userData.isStageObject)\n        .forEach((obj) => scene.remove(obj));\n\n      stageObject = null;\n      sun = null;\n      planets = [];\n\n      if (stage === \"bigbang\") {\n        // üåç Íµ¨ ÏïàÏóêÏÑú ÏûÖÏûê ÏÉùÏÑ±\n        const geometry = new THREE.BufferGeometry();\n        const numParticles = 800000;\n        const positions = new Float32Array(numParticles * 3);\n        const colors = new Float32Array(numParticles * 3);\n        const color = new THREE.Color();\n\n        for (let i = 0; i < numParticles; i++) {\n          const r = Math.random() * 3000;\n          const theta = Math.random() * Math.PI * 2;\n          const phi = Math.random() * Math.PI;\n          positions[i * 3] = r * Math.sin(phi) * Math.cos(theta);\n          positions[i * 3 + 1] = r * Math.sin(phi) * Math.sin(theta);\n          positions[i * 3 + 2] = r * Math.cos(phi);\n\n          const c = Math.random();\n          color.setRGB(c, c, c);\n          colors[i * 3] = color.r;\n          colors[i * 3 + 1] = color.g;\n          colors[i * 3 + 2] = color.b;\n        }\n\n        geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n        geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n\n        stageObject = new THREE.Points(\n          geometry,\n          new THREE.PointsMaterial({ size: 2, vertexColors: true })\n        );\n        stageObject.userData.isStageObject = true;\n        scene.add(stageObject);\n      }\n\n      if (stage === \"galaxy_formation\") {\n        stageObject = generateBlackHoleGalaxy(400000);\n        scene.add(stageObject);\n      }\n\n      if (stage === \"solar_system\") {\n        sun = createSun();\n        sun.userData.isStageObject = true;\n        scene.add(sun);\n\n        planets = createPlanets(scene);\n        planets.forEach((p) => {\n          p.mesh.userData.isStageObject = true;\n        });\n      }\n    };\n\n    setupStage();\n\n    let frameId;\n    const animate = () => {\n      if (stage === \"solar_system\" && sun) {\n        sun.rotation.y += 0.002;\n        planets.forEach((p) => {\n          p.angle += p.speed;\n          p.mesh.position.x = p.radius * Math.cos(p.angle);\n          p.mesh.position.z = p.radius * Math.sin(p.angle);\n        });\n      } else if ((stage === \"bigbang\" || stage === \"galaxy_formation\") && stageObject) {\n        stageObject.rotation.y += 0.0005;\n      }\n\n      controls.update();\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n      frameId = requestAnimationFrame(animate);\n    };\n    animate();\n\n    return () => {\n      cancelAnimationFrame(frameId);\n      renderer.dispose();\n      mount.removeChild(renderer.domElement);\n      mount.removeChild(labelRenderer.domElement);\n    };\n  }, [stage]);\n\n  return (\n    <div style={{ position: \"relative\", width: \"100%\", height: \"600px\" }}>\n      <div ref={mountRef} style={{ width: \"100%\", height: \"100%\" }} />\n      <div\n        style={{\n          position: \"absolute\",\n          top: 10,\n          left: 10,\n          zIndex: 100,\n          display: \"flex\",\n          gap: \"8px\",\n          pointerEvents: \"auto\",\n        }}\n      >\n        <button onClick={() => handleStageChange(\"bigbang\")}>BigBang</button>\n        <button onClick={() => handleStageChange(\"galaxy_formation\")}>Galaxy</button>\n        <button onClick={() => handleStageChange(\"solar_system\")}>SolarSystem</button>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
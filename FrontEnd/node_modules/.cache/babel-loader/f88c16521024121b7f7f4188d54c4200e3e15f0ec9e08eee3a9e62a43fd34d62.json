{"ast":null,"code":"var _jsxFileName = \"/Users/cellia/Desktop/bigbang/FrontEnd/src/components/ParticleCanvas.jsx\",\n  _s = $RefreshSig$();\n// src/components/ParticleCanvas.jsx\nimport { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { CSS2DRenderer, CSS2DObject } from \"three/examples/jsm/renderers/CSS2DRenderer\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { useSimulation } from \"../hooks/useSimulation\";\nimport { createSun, createPlanets } from \"../utils/solarSystem\";\nimport { generateGalaxy } from \"../utils/galaxyUtils\";\n\n// 사용자 ID 임시\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_ID = 1;\nexport default function ParticleCanvas() {\n  _s();\n  const mountRef = useRef();\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const labelRendererRef = useRef();\n  const controlsRef = useRef();\n  const [isPaused, setIsPaused] = useState(false);\n  const {\n    stage,\n    status,\n    startSimulation,\n    pauseSimulation\n  } = useSimulation(USER_ID);\n  const [currentStage, setCurrentStage] = useState(\"bigbang\"); // 버튼용 stage\n\n  const objectsRef = useRef({\n    points: null,\n    sun: null,\n    planets: []\n  });\n\n  // 1️⃣ Three.js 초기화 (한 번만)\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    sceneRef.current = scene;\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 5000);\n    camera.position.z = 600;\n    cameraRef.current = camera;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = \"absolute\";\n    labelRenderer.domElement.style.top = \"0\";\n    mount.appendChild(labelRenderer.domElement);\n    labelRendererRef.current = labelRenderer;\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    controls.enableDamping = true;\n    controls.enablePan = false;\n    controlsRef.current = controls;\n    const pointLight = new THREE.PointLight(0xffffff, 3, 5000);\n    pointLight.position.set(0, 0, 0);\n    scene.add(pointLight);\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\n    scene.add(ambientLight);\n\n    // 애니메이션 루프\n    let frameId;\n    const animate = () => {\n      if (!isPaused && status !== \"paused\") {\n        const {\n          points,\n          sun,\n          planets\n        } = objectsRef.current;\n        if (currentStage === \"solar_system\" && sun) {\n          sun.rotation.y += 0.002;\n          planets.forEach(p => {\n            p.angle += p.speed;\n            p.mesh.position.x = p.radius * Math.cos(p.angle);\n            p.mesh.position.z = p.radius * Math.sin(p.angle);\n          });\n        } else if (points) {\n          points.rotation.z += 0.001;\n        }\n      }\n      controls.update();\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n      frameId = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => {\n      cancelAnimationFrame(frameId);\n      renderer.dispose();\n      mount.removeChild(renderer.domElement);\n      mount.removeChild(labelRenderer.domElement);\n    };\n  }, [isPaused, status]);\n\n  // 2️⃣ Stage 변경 시 씬 업데이트\n  useEffect(() => {\n    if (!sceneRef.current) return;\n    const scene = sceneRef.current;\n    const {\n      points,\n      sun,\n      planets\n    } = objectsRef.current;\n\n    // 기존 객체 제거\n    const removable = scene.children.filter(obj => obj.userData.isPlanet || obj.userData.isSun || obj.userData.isOrbit || obj.userData.isBigBang || obj.userData.isGalaxy);\n    removable.forEach(obj => scene.remove(obj));\n    objectsRef.current.points = null;\n    objectsRef.current.sun = null;\n    objectsRef.current.planets = [];\n\n    // BigBang / Atom\n    if (currentStage === \"bigbang\" || currentStage === \"atom_formation\") {\n      const numParticles = 8000;\n      const geometry = new THREE.BufferGeometry();\n      const positions = new Float32Array(numParticles * 3);\n      const colors = new Float32Array(numParticles * 3);\n      const color = new THREE.Color();\n      for (let i = 0; i < numParticles; i++) {\n        positions[i * 3] = (Math.random() - 0.5) * 800;\n        positions[i * 3 + 1] = (Math.random() - 0.5) * 800;\n        positions[i * 3 + 2] = (Math.random() - 0.5) * 800;\n        const c = Math.random();\n        color.setRGB(c, c, c);\n        colors[i * 3] = color.r;\n        colors[i * 3 + 1] = color.g;\n        colors[i * 3 + 2] = color.b;\n      }\n      geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n      geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n      const points = new THREE.Points(geometry, new THREE.PointsMaterial({\n        size: 2,\n        vertexColors: true\n      }));\n      points.userData.isBigBang = true;\n      scene.add(points);\n      objectsRef.current.points = points;\n    }\n\n    // Galaxy\n    if (currentStage === \"galaxy_formation\") {\n      const points = generateGalaxy(5000);\n      points.userData.isGalaxy = true;\n      scene.add(points);\n      objectsRef.current.points = points;\n    }\n\n    // Solar System\n    if (currentStage === \"solar_system\") {\n      const sun = createSun();\n      scene.add(sun);\n      const planets = createPlanets(scene);\n      objectsRef.current.sun = sun;\n      objectsRef.current.planets = planets;\n    }\n  }, [currentStage]);\n  const handleChangeStage = stageName => {\n    setCurrentStage(stageName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"600px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 10,\n        left: 10,\n        zIndex: 10,\n        display: \"flex\",\n        gap: \"8px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChangeStage(\"bigbang\"),\n        children: \"BigBang\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChangeStage(\"galaxy_formation\"),\n        children: \"Galaxy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChangeStage(\"solar_system\"),\n        children: \"SolarSystem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSimulation,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pauseSimulation,\n        children: status === \"paused\" ? \"Resume\" : \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleCanvas, \"qiJWSYalaYUWfbuQas3ZU/7kT84=\", false, function () {\n  return [useSimulation];\n});\n_c = ParticleCanvas;\nvar _c;\n$RefreshReg$(_c, \"ParticleCanvas\");","map":{"version":3,"names":["useRef","useEffect","useState","THREE","CSS2DRenderer","CSS2DObject","OrbitControls","useSimulation","createSun","createPlanets","generateGalaxy","jsxDEV","_jsxDEV","USER_ID","ParticleCanvas","_s","mountRef","sceneRef","cameraRef","rendererRef","labelRendererRef","controlsRef","isPaused","setIsPaused","stage","status","startSimulation","pauseSimulation","currentStage","setCurrentStage","objectsRef","points","sun","planets","mount","current","width","clientWidth","height","clientHeight","scene","Scene","background","Color","camera","PerspectiveCamera","position","z","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","labelRenderer","style","top","controls","enableDamping","enablePan","pointLight","PointLight","set","add","ambientLight","AmbientLight","frameId","animate","rotation","y","forEach","p","angle","speed","mesh","x","radius","Math","cos","sin","update","render","requestAnimationFrame","cancelAnimationFrame","dispose","removeChild","removable","children","filter","obj","userData","isPlanet","isSun","isOrbit","isBigBang","isGalaxy","remove","numParticles","geometry","BufferGeometry","positions","Float32Array","colors","color","i","random","c","setRGB","r","g","b","setAttribute","BufferAttribute","Points","PointsMaterial","size","vertexColors","handleChangeStage","stageName","ref","fileName","_jsxFileName","lineNumber","columnNumber","left","zIndex","display","gap","onClick","_c","$RefreshReg$"],"sources":["/Users/cellia/Desktop/bigbang/FrontEnd/src/components/ParticleCanvas.jsx"],"sourcesContent":["// src/components/ParticleCanvas.jsx\nimport { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { CSS2DRenderer, CSS2DObject } from \"three/examples/jsm/renderers/CSS2DRenderer\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { useSimulation } from \"../hooks/useSimulation\";\nimport { createSun, createPlanets } from \"../utils/solarSystem\";\nimport { generateGalaxy } from \"../utils/galaxyUtils\";\n\n// 사용자 ID 임시\nconst USER_ID = 1;\n\nexport default function ParticleCanvas() {\n  const mountRef = useRef();\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const labelRendererRef = useRef();\n  const controlsRef = useRef();\n  const [isPaused, setIsPaused] = useState(false);\n\n  const { stage, status, startSimulation, pauseSimulation } = useSimulation(USER_ID);\n  const [currentStage, setCurrentStage] = useState(\"bigbang\"); // 버튼용 stage\n\n  const objectsRef = useRef({\n    points: null,\n    sun: null,\n    planets: [],\n  });\n\n  // 1️⃣ Three.js 초기화 (한 번만)\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    sceneRef.current = scene;\n\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 5000);\n    camera.position.z = 600;\n    cameraRef.current = camera;\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = \"absolute\";\n    labelRenderer.domElement.style.top = \"0\";\n    mount.appendChild(labelRenderer.domElement);\n    labelRendererRef.current = labelRenderer;\n\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    controls.enableDamping = true;\n    controls.enablePan = false;\n    controlsRef.current = controls;\n\n    const pointLight = new THREE.PointLight(0xffffff, 3, 5000);\n    pointLight.position.set(0, 0, 0);\n    scene.add(pointLight);\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\n    scene.add(ambientLight);\n\n    // 애니메이션 루프\n    let frameId;\n    const animate = () => {\n      if (!isPaused && status !== \"paused\") {\n        const { points, sun, planets } = objectsRef.current;\n        if (currentStage === \"solar_system\" && sun) {\n          sun.rotation.y += 0.002;\n          planets.forEach(p => {\n            p.angle += p.speed;\n            p.mesh.position.x = p.radius * Math.cos(p.angle);\n            p.mesh.position.z = p.radius * Math.sin(p.angle);\n          });\n        } else if (points) {\n          points.rotation.z += 0.001;\n        }\n      }\n\n      controls.update();\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n      frameId = requestAnimationFrame(animate);\n    };\n    animate();\n\n    return () => {\n      cancelAnimationFrame(frameId);\n      renderer.dispose();\n      mount.removeChild(renderer.domElement);\n      mount.removeChild(labelRenderer.domElement);\n    };\n  }, [isPaused, status]);\n\n  // 2️⃣ Stage 변경 시 씬 업데이트\n  useEffect(() => {\n    if (!sceneRef.current) return;\n\n    const scene = sceneRef.current;\n    const { points, sun, planets } = objectsRef.current;\n\n    // 기존 객체 제거\n    const removable = scene.children.filter(\n      obj => obj.userData.isPlanet || obj.userData.isSun || obj.userData.isOrbit || obj.userData.isBigBang || obj.userData.isGalaxy\n    );\n    removable.forEach(obj => scene.remove(obj));\n\n    objectsRef.current.points = null;\n    objectsRef.current.sun = null;\n    objectsRef.current.planets = [];\n\n    // BigBang / Atom\n    if (currentStage === \"bigbang\" || currentStage === \"atom_formation\") {\n      const numParticles = 8000;\n      const geometry = new THREE.BufferGeometry();\n      const positions = new Float32Array(numParticles * 3);\n      const colors = new Float32Array(numParticles * 3);\n      const color = new THREE.Color();\n\n      for (let i = 0; i < numParticles; i++) {\n        positions[i * 3] = (Math.random() - 0.5) * 800;\n        positions[i * 3 + 1] = (Math.random() - 0.5) * 800;\n        positions[i * 3 + 2] = (Math.random() - 0.5) * 800;\n\n        const c = Math.random();\n        color.setRGB(c, c, c);\n        colors[i * 3] = color.r;\n        colors[i * 3 + 1] = color.g;\n        colors[i * 3 + 2] = color.b;\n      }\n\n      geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n      geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n\n      const points = new THREE.Points(geometry, new THREE.PointsMaterial({ size: 2, vertexColors: true }));\n      points.userData.isBigBang = true;\n      scene.add(points);\n      objectsRef.current.points = points;\n    }\n\n    // Galaxy\n    if (currentStage === \"galaxy_formation\") {\n      const points = generateGalaxy(5000);\n      points.userData.isGalaxy = true;\n      scene.add(points);\n      objectsRef.current.points = points;\n    }\n\n    // Solar System\n    if (currentStage === \"solar_system\") {\n      const sun = createSun();\n      scene.add(sun);\n      const planets = createPlanets(scene);\n      objectsRef.current.sun = sun;\n      objectsRef.current.planets = planets;\n    }\n\n  }, [currentStage]);\n\n  const handleChangeStage = (stageName) => {\n    setCurrentStage(stageName);\n  };\n\n  return (\n    <div style={{ position: \"relative\", width: \"100%\", height: \"600px\" }}>\n      <div ref={mountRef} style={{ width: \"100%\", height: \"100%\" }} />\n\n      <div style={{ position: \"absolute\", top: 10, left: 10, zIndex: 10, display: \"flex\", gap: \"8px\" }}>\n        <button onClick={() => handleChangeStage(\"bigbang\")}>BigBang</button>\n        <button onClick={() => handleChangeStage(\"galaxy_formation\")}>Galaxy</button>\n        <button onClick={() => handleChangeStage(\"solar_system\")}>SolarSystem</button>\n        <button onClick={startSimulation}>Start</button>\n        <button onClick={pauseSimulation}>{status === \"paused\" ? \"Resume\" : \"Pause\"}</button>\n      </div>\n    </div>\n  );\n}"],"mappings":";;AAAA;AACA,SAASA,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,EAAEC,WAAW,QAAQ,4CAA4C;AACvF,SAASC,aAAa,QAAQ,2CAA2C;AACzE,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,SAAS,EAAEC,aAAa,QAAQ,sBAAsB;AAC/D,SAASC,cAAc,QAAQ,sBAAsB;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,CAAC;AAEjB,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAMC,QAAQ,GAAGhB,MAAM,CAAC,CAAC;EACzB,MAAMiB,QAAQ,GAAGjB,MAAM,CAAC,CAAC;EACzB,MAAMkB,SAAS,GAAGlB,MAAM,CAAC,CAAC;EAC1B,MAAMmB,WAAW,GAAGnB,MAAM,CAAC,CAAC;EAC5B,MAAMoB,gBAAgB,GAAGpB,MAAM,CAAC,CAAC;EACjC,MAAMqB,WAAW,GAAGrB,MAAM,CAAC,CAAC;EAC5B,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAM;IAAEsB,KAAK;IAAEC,MAAM;IAAEC,eAAe;IAAEC;EAAgB,CAAC,GAAGpB,aAAa,CAACM,OAAO,CAAC;EAClF,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;;EAE7D,MAAM4B,UAAU,GAAG9B,MAAM,CAAC;IACxB+B,MAAM,EAAE,IAAI;IACZC,GAAG,EAAE,IAAI;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;;EAEF;EACAhC,SAAS,CAAC,MAAM;IACd,MAAMiC,KAAK,GAAGlB,QAAQ,CAACmB,OAAO;IAC9B,IAAI,CAACD,KAAK,EAAE;IAEZ,MAAME,KAAK,GAAGF,KAAK,CAACG,WAAW;IAC/B,MAAMC,MAAM,GAAGJ,KAAK,CAACK,YAAY;IAEjC,MAAMC,KAAK,GAAG,IAAIrC,KAAK,CAACsC,KAAK,CAAC,CAAC;IAC/BD,KAAK,CAACE,UAAU,GAAG,IAAIvC,KAAK,CAACwC,KAAK,CAAC,QAAQ,CAAC;IAC5C1B,QAAQ,CAACkB,OAAO,GAAGK,KAAK;IAExB,MAAMI,MAAM,GAAG,IAAIzC,KAAK,CAAC0C,iBAAiB,CAAC,EAAE,EAAET,KAAK,GAAGE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC;IACzEM,MAAM,CAACE,QAAQ,CAACC,CAAC,GAAG,GAAG;IACvB7B,SAAS,CAACiB,OAAO,GAAGS,MAAM;IAE1B,MAAMI,QAAQ,GAAG,IAAI7C,KAAK,CAAC8C,aAAa,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAC7DF,QAAQ,CAACG,OAAO,CAACf,KAAK,EAAEE,MAAM,CAAC;IAC/BJ,KAAK,CAACkB,WAAW,CAACJ,QAAQ,CAACK,UAAU,CAAC;IACtClC,WAAW,CAACgB,OAAO,GAAGa,QAAQ;IAE9B,MAAMM,aAAa,GAAG,IAAIlD,aAAa,CAAC,CAAC;IACzCkD,aAAa,CAACH,OAAO,CAACf,KAAK,EAAEE,MAAM,CAAC;IACpCgB,aAAa,CAACD,UAAU,CAACE,KAAK,CAACT,QAAQ,GAAG,UAAU;IACpDQ,aAAa,CAACD,UAAU,CAACE,KAAK,CAACC,GAAG,GAAG,GAAG;IACxCtB,KAAK,CAACkB,WAAW,CAACE,aAAa,CAACD,UAAU,CAAC;IAC3CjC,gBAAgB,CAACe,OAAO,GAAGmB,aAAa;IAExC,MAAMG,QAAQ,GAAG,IAAInD,aAAa,CAACsC,MAAM,EAAEU,aAAa,CAACD,UAAU,CAAC;IACpEI,QAAQ,CAACC,aAAa,GAAG,IAAI;IAC7BD,QAAQ,CAACE,SAAS,GAAG,KAAK;IAC1BtC,WAAW,CAACc,OAAO,GAAGsB,QAAQ;IAE9B,MAAMG,UAAU,GAAG,IAAIzD,KAAK,CAAC0D,UAAU,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC;IAC1DD,UAAU,CAACd,QAAQ,CAACgB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAChCtB,KAAK,CAACuB,GAAG,CAACH,UAAU,CAAC;IACrB,MAAMI,YAAY,GAAG,IAAI7D,KAAK,CAAC8D,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC;IAC1DzB,KAAK,CAACuB,GAAG,CAACC,YAAY,CAAC;;IAEvB;IACA,IAAIE,OAAO;IACX,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpB,IAAI,CAAC7C,QAAQ,IAAIG,MAAM,KAAK,QAAQ,EAAE;QACpC,MAAM;UAAEM,MAAM;UAAEC,GAAG;UAAEC;QAAQ,CAAC,GAAGH,UAAU,CAACK,OAAO;QACnD,IAAIP,YAAY,KAAK,cAAc,IAAII,GAAG,EAAE;UAC1CA,GAAG,CAACoC,QAAQ,CAACC,CAAC,IAAI,KAAK;UACvBpC,OAAO,CAACqC,OAAO,CAACC,CAAC,IAAI;YACnBA,CAAC,CAACC,KAAK,IAAID,CAAC,CAACE,KAAK;YAClBF,CAAC,CAACG,IAAI,CAAC5B,QAAQ,CAAC6B,CAAC,GAAGJ,CAAC,CAACK,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACP,CAAC,CAACC,KAAK,CAAC;YAChDD,CAAC,CAACG,IAAI,CAAC5B,QAAQ,CAACC,CAAC,GAAGwB,CAAC,CAACK,MAAM,GAAGC,IAAI,CAACE,GAAG,CAACR,CAAC,CAACC,KAAK,CAAC;UAClD,CAAC,CAAC;QACJ,CAAC,MAAM,IAAIzC,MAAM,EAAE;UACjBA,MAAM,CAACqC,QAAQ,CAACrB,CAAC,IAAI,KAAK;QAC5B;MACF;MAEAU,QAAQ,CAACuB,MAAM,CAAC,CAAC;MACjBhC,QAAQ,CAACiC,MAAM,CAACzC,KAAK,EAAEI,MAAM,CAAC;MAC9BU,aAAa,CAAC2B,MAAM,CAACzC,KAAK,EAAEI,MAAM,CAAC;MACnCsB,OAAO,GAAGgB,qBAAqB,CAACf,OAAO,CAAC;IAC1C,CAAC;IACDA,OAAO,CAAC,CAAC;IAET,OAAO,MAAM;MACXgB,oBAAoB,CAACjB,OAAO,CAAC;MAC7BlB,QAAQ,CAACoC,OAAO,CAAC,CAAC;MAClBlD,KAAK,CAACmD,WAAW,CAACrC,QAAQ,CAACK,UAAU,CAAC;MACtCnB,KAAK,CAACmD,WAAW,CAAC/B,aAAa,CAACD,UAAU,CAAC;IAC7C,CAAC;EACH,CAAC,EAAE,CAAC/B,QAAQ,EAAEG,MAAM,CAAC,CAAC;;EAEtB;EACAxB,SAAS,CAAC,MAAM;IACd,IAAI,CAACgB,QAAQ,CAACkB,OAAO,EAAE;IAEvB,MAAMK,KAAK,GAAGvB,QAAQ,CAACkB,OAAO;IAC9B,MAAM;MAAEJ,MAAM;MAAEC,GAAG;MAAEC;IAAQ,CAAC,GAAGH,UAAU,CAACK,OAAO;;IAEnD;IACA,MAAMmD,SAAS,GAAG9C,KAAK,CAAC+C,QAAQ,CAACC,MAAM,CACrCC,GAAG,IAAIA,GAAG,CAACC,QAAQ,CAACC,QAAQ,IAAIF,GAAG,CAACC,QAAQ,CAACE,KAAK,IAAIH,GAAG,CAACC,QAAQ,CAACG,OAAO,IAAIJ,GAAG,CAACC,QAAQ,CAACI,SAAS,IAAIL,GAAG,CAACC,QAAQ,CAACK,QACvH,CAAC;IACDT,SAAS,CAAChB,OAAO,CAACmB,GAAG,IAAIjD,KAAK,CAACwD,MAAM,CAACP,GAAG,CAAC,CAAC;IAE3C3D,UAAU,CAACK,OAAO,CAACJ,MAAM,GAAG,IAAI;IAChCD,UAAU,CAACK,OAAO,CAACH,GAAG,GAAG,IAAI;IAC7BF,UAAU,CAACK,OAAO,CAACF,OAAO,GAAG,EAAE;;IAE/B;IACA,IAAIL,YAAY,KAAK,SAAS,IAAIA,YAAY,KAAK,gBAAgB,EAAE;MACnE,MAAMqE,YAAY,GAAG,IAAI;MACzB,MAAMC,QAAQ,GAAG,IAAI/F,KAAK,CAACgG,cAAc,CAAC,CAAC;MAC3C,MAAMC,SAAS,GAAG,IAAIC,YAAY,CAACJ,YAAY,GAAG,CAAC,CAAC;MACpD,MAAMK,MAAM,GAAG,IAAID,YAAY,CAACJ,YAAY,GAAG,CAAC,CAAC;MACjD,MAAMM,KAAK,GAAG,IAAIpG,KAAK,CAACwC,KAAK,CAAC,CAAC;MAE/B,KAAK,IAAI6D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,YAAY,EAAEO,CAAC,EAAE,EAAE;QACrCJ,SAAS,CAACI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC3B,IAAI,CAAC4B,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG;QAC9CL,SAAS,CAACI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC3B,IAAI,CAAC4B,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG;QAClDL,SAAS,CAACI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC3B,IAAI,CAAC4B,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG;QAElD,MAAMC,CAAC,GAAG7B,IAAI,CAAC4B,MAAM,CAAC,CAAC;QACvBF,KAAK,CAACI,MAAM,CAACD,CAAC,EAAEA,CAAC,EAAEA,CAAC,CAAC;QACrBJ,MAAM,CAACE,CAAC,GAAG,CAAC,CAAC,GAAGD,KAAK,CAACK,CAAC;QACvBN,MAAM,CAACE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGD,KAAK,CAACM,CAAC;QAC3BP,MAAM,CAACE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGD,KAAK,CAACO,CAAC;MAC7B;MAEAZ,QAAQ,CAACa,YAAY,CAAC,UAAU,EAAE,IAAI5G,KAAK,CAAC6G,eAAe,CAACZ,SAAS,EAAE,CAAC,CAAC,CAAC;MAC1EF,QAAQ,CAACa,YAAY,CAAC,OAAO,EAAE,IAAI5G,KAAK,CAAC6G,eAAe,CAACV,MAAM,EAAE,CAAC,CAAC,CAAC;MAEpE,MAAMvE,MAAM,GAAG,IAAI5B,KAAK,CAAC8G,MAAM,CAACf,QAAQ,EAAE,IAAI/F,KAAK,CAAC+G,cAAc,CAAC;QAAEC,IAAI,EAAE,CAAC;QAAEC,YAAY,EAAE;MAAK,CAAC,CAAC,CAAC;MACpGrF,MAAM,CAAC2D,QAAQ,CAACI,SAAS,GAAG,IAAI;MAChCtD,KAAK,CAACuB,GAAG,CAAChC,MAAM,CAAC;MACjBD,UAAU,CAACK,OAAO,CAACJ,MAAM,GAAGA,MAAM;IACpC;;IAEA;IACA,IAAIH,YAAY,KAAK,kBAAkB,EAAE;MACvC,MAAMG,MAAM,GAAGrB,cAAc,CAAC,IAAI,CAAC;MACnCqB,MAAM,CAAC2D,QAAQ,CAACK,QAAQ,GAAG,IAAI;MAC/BvD,KAAK,CAACuB,GAAG,CAAChC,MAAM,CAAC;MACjBD,UAAU,CAACK,OAAO,CAACJ,MAAM,GAAGA,MAAM;IACpC;;IAEA;IACA,IAAIH,YAAY,KAAK,cAAc,EAAE;MACnC,MAAMI,GAAG,GAAGxB,SAAS,CAAC,CAAC;MACvBgC,KAAK,CAACuB,GAAG,CAAC/B,GAAG,CAAC;MACd,MAAMC,OAAO,GAAGxB,aAAa,CAAC+B,KAAK,CAAC;MACpCV,UAAU,CAACK,OAAO,CAACH,GAAG,GAAGA,GAAG;MAC5BF,UAAU,CAACK,OAAO,CAACF,OAAO,GAAGA,OAAO;IACtC;EAEF,CAAC,EAAE,CAACL,YAAY,CAAC,CAAC;EAElB,MAAMyF,iBAAiB,GAAIC,SAAS,IAAK;IACvCzF,eAAe,CAACyF,SAAS,CAAC;EAC5B,CAAC;EAED,oBACE1G,OAAA;IAAK2C,KAAK,EAAE;MAAET,QAAQ,EAAE,UAAU;MAAEV,KAAK,EAAE,MAAM;MAAEE,MAAM,EAAE;IAAQ,CAAE;IAAAiD,QAAA,gBACnE3E,OAAA;MAAK2G,GAAG,EAAEvG,QAAS;MAACuC,KAAK,EAAE;QAAEnB,KAAK,EAAE,MAAM;QAAEE,MAAM,EAAE;MAAO;IAAE;MAAAkF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEhE/G,OAAA;MAAK2C,KAAK,EAAE;QAAET,QAAQ,EAAE,UAAU;QAAEU,GAAG,EAAE,EAAE;QAAEoE,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAM,CAAE;MAAAxC,QAAA,gBAC/F3E,OAAA;QAAQoH,OAAO,EAAEA,CAAA,KAAMX,iBAAiB,CAAC,SAAS,CAAE;QAAA9B,QAAA,EAAC;MAAO;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrE/G,OAAA;QAAQoH,OAAO,EAAEA,CAAA,KAAMX,iBAAiB,CAAC,kBAAkB,CAAE;QAAA9B,QAAA,EAAC;MAAM;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7E/G,OAAA;QAAQoH,OAAO,EAAEA,CAAA,KAAMX,iBAAiB,CAAC,cAAc,CAAE;QAAA9B,QAAA,EAAC;MAAW;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9E/G,OAAA;QAAQoH,OAAO,EAAEtG,eAAgB;QAAA6D,QAAA,EAAC;MAAK;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChD/G,OAAA;QAAQoH,OAAO,EAAErG,eAAgB;QAAA4D,QAAA,EAAE9D,MAAM,KAAK,QAAQ,GAAG,QAAQ,GAAG;MAAO;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5G,EAAA,CA3KuBD,cAAc;EAAA,QASwBP,aAAa;AAAA;AAAA0H,EAAA,GATnDnH,cAAc;AAAA,IAAAmH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
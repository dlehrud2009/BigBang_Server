{"ast":null,"code":"var _jsxFileName = \"/Users/cellia/Desktop/bigbang/FrontEnd/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ParticleCanvas from \"./components/ParticleCanvas\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [userid, setUserId] = useState(null);\n  const [stage, setStage] = useState(\"bigbang\");\n  const [status, setStatus] = useState(\"paused\");\n  const socketRef = useRef();\n\n  // ------------------------\n  // 접속 시 사용자 생성\n  // ------------------------\n  useEffect(() => {\n    const initUser = async () => {\n      try {\n        const res = await axios.post(\"http://localhost:4000/api/user\", {\n          username: \"Guest\"\n        });\n        setUserId(res.data.userid);\n\n        // WebSocket 연결\n        socketRef.current = io(\"http://localhost:4000\");\n        socketRef.current.emit(\"join\", res.data.userid);\n\n        // 서버 상태 수신\n        socketRef.current.on(\"updateStage\", data => {\n          setStage(data.stage);\n          setStatus(data.status);\n        });\n      } catch (err) {\n        console.error(\"사용자 생성 실패:\", err);\n      }\n    };\n    initUser();\n  }, []);\n\n  // ------------------------\n  // 시뮬레이션 제어\n  // ------------------------\n  const startSimulation = async () => {\n    if (!userid) return;\n    await axios.post(\"http://localhost:4000/api/simulation/start\", {\n      userid\n    });\n    setStatus(\"started\");\n    setStage(\"bigbang\");\n    socketRef.current.emit(\"start\", {\n      userid\n    });\n  };\n  const pauseSimulation = async () => {\n    if (!userid) return;\n    const res = await axios.post(\"http://localhost:4000/api/simulation/pause\", {\n      userid\n    });\n    setStatus(res.data.status);\n    setStage(res.data.stage);\n    socketRef.current.emit(\"pause\", {\n      userid\n    });\n  };\n  const changeStage = async newStage => {\n    if (!userid) return;\n    await axios.post(`http://localhost:4000/api/simulation/next/${userid}`, {\n      stage: newStage\n    });\n    setStage(newStage);\n    socketRef.current.emit(\"changeStage\", {\n      userid,\n      stage: newStage\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BigBang Simulator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleCanvas, {\n      userid: userid,\n      stage: stage,\n      status: status,\n      startSimulation: startSimulation,\n      pauseSimulation: pauseSimulation,\n      changeStage: changeStage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YQD/GTAefDbd8j01T05QMn5RJlw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","ParticleCanvas","io","jsxDEV","_jsxDEV","App","_s","userid","setUserId","stage","setStage","status","setStatus","socketRef","useRef","initUser","res","post","username","data","current","emit","on","err","console","error","startSimulation","pauseSimulation","changeStage","newStage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cellia/Desktop/bigbang/FrontEnd/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ParticleCanvas from \"./components/ParticleCanvas\";\nimport { io } from \"socket.io-client\";\n\nexport default function App() {\n  const [userid, setUserId] = useState(null);\n  const [stage, setStage] = useState(\"bigbang\");\n  const [status, setStatus] = useState(\"paused\");\n\n  const socketRef = useRef();\n\n  // ------------------------\n  // 접속 시 사용자 생성\n  // ------------------------\n  useEffect(() => {\n    const initUser = async () => {\n      try {\n        const res = await axios.post(\"http://localhost:4000/api/user\", {\n          username: \"Guest\",\n        });\n        setUserId(res.data.userid);\n\n        // WebSocket 연결\n        socketRef.current = io(\"http://localhost:4000\");\n        socketRef.current.emit(\"join\", res.data.userid);\n\n        // 서버 상태 수신\n        socketRef.current.on(\"updateStage\", (data) => {\n          setStage(data.stage);\n          setStatus(data.status);\n        });\n      } catch (err) {\n        console.error(\"사용자 생성 실패:\", err);\n      }\n    };\n    initUser();\n  }, []);\n\n  // ------------------------\n  // 시뮬레이션 제어\n  // ------------------------\n  const startSimulation = async () => {\n    if (!userid) return;\n    await axios.post(\"http://localhost:4000/api/simulation/start\", { userid });\n    setStatus(\"started\");\n    setStage(\"bigbang\");\n    socketRef.current.emit(\"start\", { userid });\n  };\n\n  const pauseSimulation = async () => {\n    if (!userid) return;\n    const res = await axios.post(\"http://localhost:4000/api/simulation/pause\", { userid });\n    setStatus(res.data.status);\n    setStage(res.data.stage);\n    socketRef.current.emit(\"pause\", { userid });\n  };\n\n  const changeStage = async (newStage) => {\n    if (!userid) return;\n    await axios.post(`http://localhost:4000/api/simulation/next/${userid}`, { stage: newStage });\n    setStage(newStage);\n    socketRef.current.emit(\"changeStage\", { userid, stage: newStage });\n  };\n\n  return (\n    <div>\n      <h1>BigBang Simulator</h1>\n      <ParticleCanvas\n        userid={userid}\n        stage={stage}\n        status={status}\n        startSimulation={startSimulation}\n        pauseSimulation={pauseSimulation}\n        changeStage={changeStage}\n      />\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
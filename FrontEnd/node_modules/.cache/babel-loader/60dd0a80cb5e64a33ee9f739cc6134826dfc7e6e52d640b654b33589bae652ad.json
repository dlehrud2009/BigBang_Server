{"ast":null,"code":"var _jsxFileName = \"/Users/cellia/Desktop/bigbang/FrontEnd/src/components/ParticleCanvas.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/components/ParticleCanvas.jsx\nimport { useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { CSS2DRenderer } from \"three/examples/jsm/renderers/CSS2DRenderer\";\nimport { createSun, createPlanets } from \"../utils/solarSystem\";\nimport { generateGalaxy } from \"../utils/galaxyUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:4000\");\nexport default function ParticleCanvas({\n  userid,\n  stage,\n  setStage\n}) {\n  _s();\n  const mountRef = useRef();\n\n  // WebSocket으로 서버 stage 업데이트 받기\n  useEffect(() => {\n    socket.on(\"stageUpdated\", data => {\n      if (data.userid === userid) setStage(data.stage);\n    });\n    return () => socket.off(\"stageUpdated\");\n  }, [userid, setStage]);\n  const handleStageChange = newStage => {\n    if (!userid) return;\n    axios.post(\"http://localhost:4000/api/simulation/stage\", {\n      userid,\n      stage: newStage\n    }).then(res => setStage(res.data.stage)).catch(err => console.error(err));\n  };\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 5000);\n    camera.position.z = 600;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = \"absolute\";\n    labelRenderer.domElement.style.top = \"0\";\n    mount.appendChild(labelRenderer.domElement);\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    controls.enableDamping = true;\n    controls.enablePan = false;\n    const pointLight = new THREE.PointLight(0xffffff, 3, 5000);\n    pointLight.position.set(0, 0, 0);\n    scene.add(pointLight);\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\n    scene.add(ambientLight);\n    let points = null;\n    let sun = null;\n    let planets = [];\n    const setupStage = () => {\n      // 이전 stage 제거\n      scene.children.filter(obj => obj.userData.isStageObject).forEach(obj => scene.remove(obj));\n      points = null;\n      sun = null;\n      planets = [];\n      if (stage === \"bigbang\") {\n        const geometry = new THREE.BufferGeometry();\n        const numParticles = 5000;\n        const positions = new Float32Array(numParticles * 3);\n        const colors = new Float32Array(numParticles * 3);\n        const color = new THREE.Color();\n        for (let i = 0; i < numParticles; i++) {\n          positions[i * 3] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 1] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 2] = (Math.random() - 0.5) * 800;\n          const c = Math.random();\n          color.setRGB(c, c, c);\n          colors[i * 3] = color.r;\n          colors[i * 3 + 1] = color.g;\n          colors[i * 3 + 2] = color.b;\n        }\n        geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n        geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n        points = new THREE.Points(geometry, new THREE.PointsMaterial({\n          size: 2,\n          vertexColors: true\n        }));\n        points.userData.isStageObject = true;\n        scene.add(points);\n      }\n      if (stage === \"galaxy_formation\") {\n        points = generateGalaxy(5000);\n        points.userData.isStageObject = true;\n        scene.add(points);\n      }\n      if (stage === \"solar_system\") {\n        sun = createSun();\n        sun.userData.isStageObject = true;\n        scene.add(sun);\n        planets = createPlanets(scene);\n        planets.forEach(p => {\n          p.mesh.userData.isStageObject = true;\n        });\n      }\n    };\n    setupStage();\n    let frameId;\n    const animate = () => {\n      // stage별 애니메이션\n      if (stage === \"solar_system\" && sun) {\n        sun.rotation.y += 0.002;\n        planets.forEach(p => {\n          p.angle += p.speed;\n          p.mesh.position.x = p.radius * Math.cos(p.angle);\n          p.mesh.position.z = p.radius * Math.sin(p.angle);\n        });\n      } else if ((stage === \"bigbang\" || stage === \"galaxy_formation\") && points) {\n        points.rotation.z += 0.001;\n      }\n      controls.update();\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n      frameId = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => {\n      cancelAnimationFrame(frameId);\n      renderer.dispose();\n      mount.removeChild(renderer.domElement);\n      mount.removeChild(labelRenderer.domElement);\n    };\n  }, [stage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"600px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 10,\n        left: 10,\n        zIndex: 100,\n        display: \"flex\",\n        gap: \"8px\",\n        pointerEvents: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleStageChange(\"bigbang\"),\n        children: \"BigBang\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleStageChange(\"galaxy_formation\"),\n        children: \"Galaxy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleStageChange(\"solar_system\"),\n        children: \"SolarSystem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleCanvas, \"F31R4KojS3GBmgP08zZIju4WW6M=\");\n_c = ParticleCanvas;\nvar _c;\n$RefreshReg$(_c, \"ParticleCanvas\");","map":{"version":3,"names":["useRef","useEffect","axios","io","THREE","OrbitControls","CSS2DRenderer","createSun","createPlanets","generateGalaxy","jsxDEV","_jsxDEV","socket","ParticleCanvas","userid","stage","setStage","_s","mountRef","on","data","off","handleStageChange","newStage","post","then","res","catch","err","console","error","mount","current","width","clientWidth","height","clientHeight","scene","Scene","background","Color","camera","PerspectiveCamera","position","z","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","labelRenderer","style","top","controls","enableDamping","enablePan","pointLight","PointLight","set","add","ambientLight","AmbientLight","points","sun","planets","setupStage","children","filter","obj","userData","isStageObject","forEach","remove","geometry","BufferGeometry","numParticles","positions","Float32Array","colors","color","i","Math","random","c","setRGB","r","g","b","setAttribute","BufferAttribute","Points","PointsMaterial","size","vertexColors","p","mesh","frameId","animate","rotation","y","angle","speed","x","radius","cos","sin","update","render","requestAnimationFrame","cancelAnimationFrame","dispose","removeChild","ref","fileName","_jsxFileName","lineNumber","columnNumber","left","zIndex","display","gap","pointerEvents","onClick","_c","$RefreshReg$"],"sources":["/Users/cellia/Desktop/bigbang/FrontEnd/src/components/ParticleCanvas.jsx"],"sourcesContent":["// frontend/src/components/ParticleCanvas.jsx\nimport { useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { CSS2DRenderer } from \"three/examples/jsm/renderers/CSS2DRenderer\";\nimport { createSun, createPlanets } from \"../utils/solarSystem\";\nimport { generateGalaxy } from \"../utils/galaxyUtils\";\n\nconst socket = io(\"http://localhost:4000\");\n\nexport default function ParticleCanvas({ userid, stage, setStage }) {\n  const mountRef = useRef();\n\n  // WebSocket으로 서버 stage 업데이트 받기\n  useEffect(() => {\n    socket.on(\"stageUpdated\", (data) => {\n      if (data.userid === userid) setStage(data.stage);\n    });\n\n    return () => socket.off(\"stageUpdated\");\n  }, [userid, setStage]);\n\n  const handleStageChange = (newStage) => {\n    if (!userid) return;\n    axios.post(\"http://localhost:4000/api/simulation/stage\", { userid, stage: newStage })\n      .then(res => setStage(res.data.stage))\n      .catch(err => console.error(err));\n  };\n\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 5000);\n    camera.position.z = 600;\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = \"absolute\";\n    labelRenderer.domElement.style.top = \"0\";\n    mount.appendChild(labelRenderer.domElement);\n\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    controls.enableDamping = true;\n    controls.enablePan = false;\n\n    const pointLight = new THREE.PointLight(0xffffff, 3, 5000);\n    pointLight.position.set(0, 0, 0);\n    scene.add(pointLight);\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\n    scene.add(ambientLight);\n\n    let points = null;\n    let sun = null;\n    let planets = [];\n\n    const setupStage = () => {\n      // 이전 stage 제거\n      scene.children\n        .filter(obj => obj.userData.isStageObject)\n        .forEach(obj => scene.remove(obj));\n\n      points = null;\n      sun = null;\n      planets = [];\n\n      if (stage === \"bigbang\") {\n        const geometry = new THREE.BufferGeometry();\n        const numParticles = 5000;\n        const positions = new Float32Array(numParticles * 3);\n        const colors = new Float32Array(numParticles * 3);\n        const color = new THREE.Color();\n\n        for (let i = 0; i < numParticles; i++) {\n          positions[i * 3] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 1] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 2] = (Math.random() - 0.5) * 800;\n          const c = Math.random();\n          color.setRGB(c, c, c);\n          colors[i * 3] = color.r;\n          colors[i * 3 + 1] = color.g;\n          colors[i * 3 + 2] = color.b;\n        }\n\n        geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n        geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n\n        points = new THREE.Points(\n          geometry,\n          new THREE.PointsMaterial({ size: 2, vertexColors: true })\n        );\n        points.userData.isStageObject = true;\n        scene.add(points);\n      }\n\n      if (stage === \"galaxy_formation\") {\n        points = generateGalaxy(5000);\n        points.userData.isStageObject = true;\n        scene.add(points);\n      }\n\n      if (stage === \"solar_system\") {\n        sun = createSun();\n        sun.userData.isStageObject = true;\n        scene.add(sun);\n\n        planets = createPlanets(scene);\n        planets.forEach(p => {\n          p.mesh.userData.isStageObject = true;\n        });\n      }\n    };\n\n    setupStage();\n\n    let frameId;\n    const animate = () => {\n      // stage별 애니메이션\n      if (stage === \"solar_system\" && sun) {\n        sun.rotation.y += 0.002;\n        planets.forEach(p => {\n          p.angle += p.speed;\n          p.mesh.position.x = p.radius * Math.cos(p.angle);\n          p.mesh.position.z = p.radius * Math.sin(p.angle);\n        });\n      } else if ((stage === \"bigbang\" || stage === \"galaxy_formation\") && points) {\n        points.rotation.z += 0.001;\n      }\n\n      controls.update();\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n      frameId = requestAnimationFrame(animate);\n    };\n    animate();\n\n    return () => {\n      cancelAnimationFrame(frameId);\n      renderer.dispose();\n      mount.removeChild(renderer.domElement);\n      mount.removeChild(labelRenderer.domElement);\n    };\n  }, [stage]);\n\n  return (\n    <div style={{ position: \"relative\", width: \"100%\", height: \"600px\" }}>\n      <div ref={mountRef} style={{ width: \"100%\", height: \"100%\" }} />\n      <div\n        style={{\n          position: \"absolute\",\n          top: 10,\n          left: 10,\n          zIndex: 100,\n          display: \"flex\",\n          gap: \"8px\",\n          pointerEvents: \"auto\",\n        }}\n      >\n        <button onClick={() => handleStageChange(\"bigbang\")}>BigBang</button>\n        <button onClick={() => handleStageChange(\"galaxy_formation\")}>Galaxy</button>\n        <button onClick={() => handleStageChange(\"solar_system\")}>SolarSystem</button>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
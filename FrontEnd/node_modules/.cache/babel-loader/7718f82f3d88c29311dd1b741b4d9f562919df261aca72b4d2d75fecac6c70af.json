{"ast":null,"code":"var _jsxFileName = \"/Users/cellia/Desktop/bigbang/FrontEnd/src/components/ParticleCanvas.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { CSS2DRenderer } from \"three/examples/jsm/renderers/CSS2DRenderer\";\nimport { createSun, createPlanets } from \"../utils/solarSystem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ParticleCanvas({\n  stage,\n  status,\n  startSimulation,\n  pauseSimulation,\n  changeStage\n}) {\n  _s();\n  const mountRef = useRef();\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    const camera = new THREE.PerspectiveCamera(60, width / height, 1, 50000);\n    camera.position.set(0, 2500, 10000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = \"absolute\";\n    labelRenderer.domElement.style.top = \"0\";\n    mount.appendChild(labelRenderer.domElement);\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    controls.enableDamping = true;\n    controls.enablePan = false;\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\n    scene.add(ambientLight);\n    let stageObject = null;\n    let sun = null;\n    let planets = [];\n    const setupStage = () => {\n      scene.children.filter(obj => obj.userData.isStageObject).forEach(obj => scene.remove(obj));\n      stageObject = null;\n      sun = null;\n      planets = [];\n      if (stage === \"solar_system\") {\n        sun = createSun();\n        sun.userData.isStageObject = true;\n        scene.add(sun);\n        planets = createPlanets(scene);\n        planets.forEach(p => {\n          p.mesh.userData.isStageObject = true;\n        });\n        camera.position.set(0, 500, 2500);\n        controls.target.set(0, 0, 0);\n        controls.update();\n      }\n      if (stage === \"bigbang\") {\n        const geometry = new THREE.BufferGeometry();\n        const numParticles = 800000;\n        const positions = new Float32Array(numParticles * 3);\n        const colors = new Float32Array(numParticles * 3);\n        const color = new THREE.Color();\n        for (let i = 0; i < numParticles; i++) {\n          const r = Math.random() * 3000;\n          const theta = Math.random() * Math.PI * 2;\n          const phi = Math.random() * Math.PI;\n          positions[i * 3] = r * Math.sin(phi) * Math.cos(theta);\n          positions[i * 3 + 1] = r * Math.sin(phi) * Math.sin(theta);\n          positions[i * 3 + 2] = r * Math.cos(phi);\n          const c = Math.random();\n          color.setRGB(c, c, c);\n          colors[i * 3] = color.r;\n          colors[i * 3 + 1] = color.g;\n          colors[i * 3 + 2] = color.b;\n        }\n        geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n        geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n        stageObject = new THREE.Points(geometry, new THREE.PointsMaterial({\n          size: 2,\n          vertexColors: true\n        }));\n        stageObject.userData.isStageObject = true;\n        scene.add(stageObject);\n        camera.position.set(0, 0, 1000);\n        controls.target.set(0, 0, 0);\n        controls.update();\n      }\n    };\n    setupStage();\n    let frameId;\n    const animate = () => {\n      if (stage === \"solar_system\" && sun) sun.rotation.y += 0.002;else if (stage === \"bigbang\" && stageObject) stageObject.rotation.y += 0.0005;\n      controls.update();\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n      frameId = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => {\n      cancelAnimationFrame(frameId);\n      renderer.dispose();\n      mount.removeChild(renderer.domElement);\n      mount.removeChild(labelRenderer.domElement);\n    };\n  }, [stage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"600px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 10,\n        left: 10,\n        zIndex: 100,\n        display: \"flex\",\n        gap: \"8px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSimulation,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pauseSimulation,\n        children: status === \"paused\" ? \"Resume\" : \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeStage(\"bigbang\"),\n        children: \"BigBang\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeStage(\"galaxy_formation\"),\n        children: \"Galaxy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeStage(\"solar_system\"),\n        children: \"SolarSystem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleCanvas, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ParticleCanvas;\nvar _c;\n$RefreshReg$(_c, \"ParticleCanvas\");","map":{"version":3,"names":["useRef","useEffect","THREE","OrbitControls","CSS2DRenderer","createSun","createPlanets","jsxDEV","_jsxDEV","ParticleCanvas","stage","status","startSimulation","pauseSimulation","changeStage","_s","mountRef","mount","current","width","clientWidth","height","clientHeight","scene","Scene","background","Color","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","labelRenderer","style","top","controls","enableDamping","enablePan","ambientLight","AmbientLight","add","stageObject","sun","planets","setupStage","children","filter","obj","userData","isStageObject","forEach","remove","p","mesh","target","update","geometry","BufferGeometry","numParticles","positions","Float32Array","colors","color","i","r","Math","random","theta","PI","phi","sin","cos","c","setRGB","g","b","setAttribute","BufferAttribute","Points","PointsMaterial","size","vertexColors","frameId","animate","rotation","y","render","requestAnimationFrame","cancelAnimationFrame","dispose","removeChild","ref","fileName","_jsxFileName","lineNumber","columnNumber","left","zIndex","display","gap","onClick","_c","$RefreshReg$"],"sources":["/Users/cellia/Desktop/bigbang/FrontEnd/src/components/ParticleCanvas.jsx"],"sourcesContent":["import { useRef, useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { CSS2DRenderer } from \"three/examples/jsm/renderers/CSS2DRenderer\";\nimport { createSun, createPlanets } from \"../utils/solarSystem\";\n\nexport default function ParticleCanvas({ stage, status, startSimulation, pauseSimulation, changeStage }) {\n  const mountRef = useRef();\n\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n\n    const camera = new THREE.PerspectiveCamera(60, width / height, 1, 50000);\n    camera.position.set(0, 2500, 10000);\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = \"absolute\";\n    labelRenderer.domElement.style.top = \"0\";\n    mount.appendChild(labelRenderer.domElement);\n\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    controls.enableDamping = true;\n    controls.enablePan = false;\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\n    scene.add(ambientLight);\n\n    let stageObject = null;\n    let sun = null;\n    let planets = [];\n\n    const setupStage = () => {\n      scene.children.filter((obj) => obj.userData.isStageObject).forEach((obj) => scene.remove(obj));\n      stageObject = null;\n      sun = null;\n      planets = [];\n\n      if (stage === \"solar_system\") {\n        sun = createSun();\n        sun.userData.isStageObject = true;\n        scene.add(sun);\n\n        planets = createPlanets(scene);\n        planets.forEach((p) => {\n          p.mesh.userData.isStageObject = true;\n        });\n\n        camera.position.set(0, 500, 2500);\n        controls.target.set(0, 0, 0);\n        controls.update();\n      }\n\n      if (stage === \"bigbang\") {\n        const geometry = new THREE.BufferGeometry();\n        const numParticles = 800000;\n        const positions = new Float32Array(numParticles * 3);\n        const colors = new Float32Array(numParticles * 3);\n        const color = new THREE.Color();\n\n        for (let i = 0; i < numParticles; i++) {\n          const r = Math.random() * 3000;\n          const theta = Math.random() * Math.PI * 2;\n          const phi = Math.random() * Math.PI;\n          positions[i * 3] = r * Math.sin(phi) * Math.cos(theta);\n          positions[i * 3 + 1] = r * Math.sin(phi) * Math.sin(theta);\n          positions[i * 3 + 2] = r * Math.cos(phi);\n          const c = Math.random();\n          color.setRGB(c, c, c);\n          colors[i * 3] = color.r;\n          colors[i * 3 + 1] = color.g;\n          colors[i * 3 + 2] = color.b;\n        }\n\n        geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n        geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n\n        stageObject = new THREE.Points(geometry, new THREE.PointsMaterial({ size: 2, vertexColors: true }));\n        stageObject.userData.isStageObject = true;\n        scene.add(stageObject);\n\n        camera.position.set(0, 0, 1000);\n        controls.target.set(0, 0, 0);\n        controls.update();\n      }\n    };\n\n    setupStage();\n\n    let frameId;\n    const animate = () => {\n      if (stage === \"solar_system\" && sun) sun.rotation.y += 0.002;\n      else if ((stage === \"bigbang\") && stageObject) stageObject.rotation.y += 0.0005;\n\n      controls.update();\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n\n      frameId = requestAnimationFrame(animate);\n    };\n    animate();\n\n    return () => {\n      cancelAnimationFrame(frameId);\n      renderer.dispose();\n      mount.removeChild(renderer.domElement);\n      mount.removeChild(labelRenderer.domElement);\n    };\n  }, [stage]);\n\n  return (\n    <div style={{ position: \"relative\", width: \"100%\", height: \"600px\" }}>\n      <div ref={mountRef} style={{ width: \"100%\", height: \"100%\" }} />\n\n      <div style={{ position: \"absolute\", top: 10, left: 10, zIndex: 100, display: \"flex\", gap: \"8px\" }}>\n        <button onClick={startSimulation}>Start</button>\n        <button onClick={pauseSimulation}>{status === \"paused\" ? \"Resume\" : \"Pause\"}</button>\n        <button onClick={() => changeStage(\"bigbang\")}>BigBang</button>\n        <button onClick={() => changeStage(\"galaxy_formation\")}>Galaxy</button>\n        <button onClick={() => changeStage(\"solar_system\")}>SolarSystem</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
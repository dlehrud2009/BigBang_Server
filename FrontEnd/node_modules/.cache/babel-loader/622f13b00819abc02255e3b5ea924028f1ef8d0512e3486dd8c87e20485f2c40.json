{"ast":null,"code":"var _jsxFileName = \"/Users/cellia/Desktop/bigbang/FrontEnd/src/components/ParticleCanvas.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { CSS2DRenderer } from \"three/examples/jsm/renderers/CSS2DRenderer\";\nimport { createSun, createPlanets } from \"../utils/solarSystem\";\nimport { generateGalaxy } from \"../utils/galaxyUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ParticleCanvas({\n  userid,\n  stage,\n  changeStage\n}) {\n  _s();\n  const mountRef = useRef();\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 5000);\n    camera.position.z = 600;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = \"absolute\";\n    labelRenderer.domElement.style.top = \"0\";\n    labelRenderer.domElement.style.pointerEvents = \"none\";\n    mount.appendChild(labelRenderer.domElement);\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    controls.enableDamping = true;\n    controls.enablePan = false;\n    const pointLight = new THREE.PointLight(0xffffff, 3, 5000);\n    pointLight.position.set(0, 0, 0);\n    scene.add(pointLight);\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\n    scene.add(ambientLight);\n    let points = null;\n    let sun = null;\n    let planets = [];\n    const setupStage = () => {\n      scene.children.filter(obj => obj.userData.isStageObject).forEach(obj => scene.remove(obj));\n      points = null;\n      sun = null;\n      planets = [];\n      if (stage === \"bigbang\") {\n        const geometry = new THREE.BufferGeometry();\n        const numParticles = 5000;\n        const positions = new Float32Array(numParticles * 3);\n        const colors = new Float32Array(numParticles * 3);\n        const color = new THREE.Color();\n        for (let i = 0; i < numParticles; i++) {\n          positions[i * 3] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 1] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 2] = (Math.random() - 0.5) * 800;\n          const c = Math.random();\n          color.setRGB(c, c, c);\n          colors[i * 3] = color.r;\n          colors[i * 3 + 1] = color.g;\n          colors[i * 3 + 2] = color.b;\n        }\n        geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n        geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n        points = new THREE.Points(geometry, new THREE.PointsMaterial({\n          size: 2,\n          vertexColors: true\n        }));\n        points.userData.isStageObject = true;\n        scene.add(points);\n      }\n      if (stage === \"galaxy_formation\") {\n        points = generateGalaxy(5000);\n        points.userData.isStageObject = true;\n        scene.add(points);\n      }\n      if (stage === \"solar_system\") {\n        sun = createSun();\n        sun.userData.isStageObject = true;\n        scene.add(sun);\n        planets = createPlanets(scene);\n        planets.forEach(p => p.mesh.userData.isStageObject = true);\n      }\n    };\n    setupStage();\n    let frameId;\n    const animate = () => {\n      if (stage === \"solar_system\" && sun) {\n        sun.rotation.y += 0.002;\n        planets.forEach(p => {\n          p.angle += p.speed;\n          p.mesh.position.x = p.radius * Math.cos(p.angle);\n          p.mesh.position.z = p.radius * Math.sin(p.angle);\n        });\n      } else if (points) {\n        points.rotation.z += 0.001;\n      }\n      controls.update();\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n      frameId = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => {\n      cancelAnimationFrame(frameId);\n      renderer.dispose();\n      mount.removeChild(renderer.domElement);\n      mount.removeChild(labelRenderer.domElement);\n    };\n  }, [stage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"600px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 10,\n        left: 10,\n        zIndex: 100,\n        display: \"flex\",\n        gap: \"8px\",\n        pointerEvents: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeStage(\"bigbang\"),\n        children: \"BigBang\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeStage(\"galaxy_formation\"),\n        children: \"Galaxy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeStage(\"solar_system\"),\n        children: \"SolarSystem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleCanvas, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ParticleCanvas;\nvar _c;\n$RefreshReg$(_c, \"ParticleCanvas\");","map":{"version":3,"names":["useRef","useEffect","THREE","OrbitControls","CSS2DRenderer","createSun","createPlanets","generateGalaxy","jsxDEV","_jsxDEV","ParticleCanvas","userid","stage","changeStage","_s","mountRef","mount","current","width","clientWidth","height","clientHeight","scene","Scene","background","Color","camera","PerspectiveCamera","position","z","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","labelRenderer","style","top","pointerEvents","controls","enableDamping","enablePan","pointLight","PointLight","set","add","ambientLight","AmbientLight","points","sun","planets","setupStage","children","filter","obj","userData","isStageObject","forEach","remove","geometry","BufferGeometry","numParticles","positions","Float32Array","colors","color","i","Math","random","c","setRGB","r","g","b","setAttribute","BufferAttribute","Points","PointsMaterial","size","vertexColors","p","mesh","frameId","animate","rotation","y","angle","speed","x","radius","cos","sin","update","render","requestAnimationFrame","cancelAnimationFrame","dispose","removeChild","ref","fileName","_jsxFileName","lineNumber","columnNumber","left","zIndex","display","gap","onClick","_c","$RefreshReg$"],"sources":["/Users/cellia/Desktop/bigbang/FrontEnd/src/components/ParticleCanvas.jsx"],"sourcesContent":["import { useRef, useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { CSS2DRenderer } from \"three/examples/jsm/renderers/CSS2DRenderer\";\nimport { createSun, createPlanets } from \"../utils/solarSystem\";\nimport { generateGalaxy } from \"../utils/galaxyUtils\";\n\nexport default function ParticleCanvas({ userid, stage, changeStage }) {\n  const mountRef = useRef();\n\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 5000);\n    camera.position.z = 600;\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = \"absolute\";\n    labelRenderer.domElement.style.top = \"0\";\n    labelRenderer.domElement.style.pointerEvents = \"none\";\n    mount.appendChild(labelRenderer.domElement);\n\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    controls.enableDamping = true;\n    controls.enablePan = false;\n\n    const pointLight = new THREE.PointLight(0xffffff, 3, 5000);\n    pointLight.position.set(0, 0, 0);\n    scene.add(pointLight);\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\n    scene.add(ambientLight);\n\n    let points = null;\n    let sun = null;\n    let planets = [];\n\n    const setupStage = () => {\n      scene.children\n        .filter((obj) => obj.userData.isStageObject)\n        .forEach((obj) => scene.remove(obj));\n\n      points = null;\n      sun = null;\n      planets = [];\n\n      if (stage === \"bigbang\") {\n        const geometry = new THREE.BufferGeometry();\n        const numParticles = 5000;\n        const positions = new Float32Array(numParticles * 3);\n        const colors = new Float32Array(numParticles * 3);\n        const color = new THREE.Color();\n\n        for (let i = 0; i < numParticles; i++) {\n          positions[i * 3] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 1] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 2] = (Math.random() - 0.5) * 800;\n          const c = Math.random();\n          color.setRGB(c, c, c);\n          colors[i * 3] = color.r;\n          colors[i * 3 + 1] = color.g;\n          colors[i * 3 + 2] = color.b;\n        }\n\n        geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n        geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n\n        points = new THREE.Points(geometry, new THREE.PointsMaterial({ size: 2, vertexColors: true }));\n        points.userData.isStageObject = true;\n        scene.add(points);\n      }\n\n      if (stage === \"galaxy_formation\") {\n        points = generateGalaxy(5000);\n        points.userData.isStageObject = true;\n        scene.add(points);\n      }\n\n      if (stage === \"solar_system\") {\n        sun = createSun();\n        sun.userData.isStageObject = true;\n        scene.add(sun);\n        planets = createPlanets(scene);\n        planets.forEach((p) => (p.mesh.userData.isStageObject = true));\n      }\n    };\n\n    setupStage();\n\n    let frameId;\n    const animate = () => {\n      if (stage === \"solar_system\" && sun) {\n        sun.rotation.y += 0.002;\n        planets.forEach((p) => {\n          p.angle += p.speed;\n          p.mesh.position.x = p.radius * Math.cos(p.angle);\n          p.mesh.position.z = p.radius * Math.sin(p.angle);\n        });\n      } else if (points) {\n        points.rotation.z += 0.001;\n      }\n\n      controls.update();\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n      frameId = requestAnimationFrame(animate);\n    };\n    animate();\n\n    return () => {\n      cancelAnimationFrame(frameId);\n      renderer.dispose();\n      mount.removeChild(renderer.domElement);\n      mount.removeChild(labelRenderer.domElement);\n    };\n  }, [stage]);\n\n  return (\n    <div style={{ position: \"relative\", width: \"100%\", height: \"600px\" }}>\n      <div ref={mountRef} style={{ width: \"100%\", height: \"100%\" }} />\n\n      <div\n        style={{\n          position: \"absolute\",\n          top: 10,\n          left: 10,\n          zIndex: 100,\n          display: \"flex\",\n          gap: \"8px\",\n          pointerEvents: \"auto\",\n        }}\n      >\n        <button onClick={() => changeStage(\"bigbang\")}>BigBang</button>\n        <button onClick={() => changeStage(\"galaxy_formation\")}>Galaxy</button>\n        <button onClick={() => changeStage(\"solar_system\")}>SolarSystem</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
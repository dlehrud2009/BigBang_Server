{"ast":null,"code":"import * as THREE from \"three\";\nexport function generateGalaxy(numParticles = 2500) {\n  const geometry = new THREE.BufferGeometry();\n  const positions = new Float32Array(numParticles * 3);\n  const colors = new Float32Array(numParticles * 3);\n  const color = new THREE.Color();\n  const arms = 2;\n  const armTwist = 0.5;\n  for (let i = 0; i < numParticles; i++) {\n    const r = Math.random() ** 0.5;\n    const angle = r * 2 * Math.PI * arms + Math.random() * armTwist;\n    positions[i * 3] = r * Math.cos(angle) * 300;\n    positions[i * 3 + 1] = r * Math.sin(angle) * 300;\n    positions[i * 3 + 2] = (Math.random() - 0.5) * 100;\n    const c = 0.6 + Math.random() * 0.4;\n    color.setRGB(c, c, 1);\n    colors[i * 3] = color.r;\n    colors[i * 3 + 1] = color.g;\n    colors[i * 3 + 2] = color.b;\n  }\n  geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n  geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n  const material = new THREE.PointsMaterial({\n    size: 2,\n    vertexColors: true\n  });\n  return new THREE.Points(geometry, material);\n}","map":{"version":3,"names":["THREE","generateGalaxy","numParticles","geometry","BufferGeometry","positions","Float32Array","colors","color","Color","arms","armTwist","i","r","Math","random","angle","PI","cos","sin","c","setRGB","g","b","setAttribute","BufferAttribute","material","PointsMaterial","size","vertexColors","Points"],"sources":["/Users/cellia/Desktop/bigbang/FrontEnd/src/utils/galaxyUtils.js"],"sourcesContent":["import * as THREE from \"three\";\n\nexport function generateGalaxy(numParticles = 2500) {\n  const geometry = new THREE.BufferGeometry();\n  const positions = new Float32Array(numParticles * 3);\n  const colors = new Float32Array(numParticles * 3);\n  const color = new THREE.Color();\n\n  const arms = 2;\n  const armTwist = 0.5;\n\n  for (let i = 0; i < numParticles; i++) {\n    const r = Math.random() ** 0.5;\n    const angle = r * 2 * Math.PI * arms + Math.random() * armTwist;\n\n    positions[i * 3] = r * Math.cos(angle) * 300;\n    positions[i * 3 + 1] = r * Math.sin(angle) * 300;\n    positions[i * 3 + 2] = (Math.random() - 0.5) * 100;\n\n    const c = 0.6 + Math.random() * 0.4;\n    color.setRGB(c, c, 1);\n    colors[i * 3] = color.r;\n    colors[i * 3 + 1] = color.g;\n    colors[i * 3 + 2] = color.b;\n  }\n\n  geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n  geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n\n  const material = new THREE.PointsMaterial({ size: 2, vertexColors: true });\n  return new THREE.Points(geometry, material);\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAO,SAASC,cAAcA,CAACC,YAAY,GAAG,IAAI,EAAE;EAClD,MAAMC,QAAQ,GAAG,IAAIH,KAAK,CAACI,cAAc,CAAC,CAAC;EAC3C,MAAMC,SAAS,GAAG,IAAIC,YAAY,CAACJ,YAAY,GAAG,CAAC,CAAC;EACpD,MAAMK,MAAM,GAAG,IAAID,YAAY,CAACJ,YAAY,GAAG,CAAC,CAAC;EACjD,MAAMM,KAAK,GAAG,IAAIR,KAAK,CAACS,KAAK,CAAC,CAAC;EAE/B,MAAMC,IAAI,GAAG,CAAC;EACd,MAAMC,QAAQ,GAAG,GAAG;EAEpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,YAAY,EAAEU,CAAC,EAAE,EAAE;IACrC,MAAMC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAI,GAAG;IAC9B,MAAMC,KAAK,GAAGH,CAAC,GAAG,CAAC,GAAGC,IAAI,CAACG,EAAE,GAAGP,IAAI,GAAGI,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGJ,QAAQ;IAE/DN,SAAS,CAACO,CAAC,GAAG,CAAC,CAAC,GAAGC,CAAC,GAAGC,IAAI,CAACI,GAAG,CAACF,KAAK,CAAC,GAAG,GAAG;IAC5CX,SAAS,CAACO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGC,CAAC,GAAGC,IAAI,CAACK,GAAG,CAACH,KAAK,CAAC,GAAG,GAAG;IAChDX,SAAS,CAACO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAACE,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG;IAElD,MAAMK,CAAC,GAAG,GAAG,GAAGN,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;IACnCP,KAAK,CAACa,MAAM,CAACD,CAAC,EAAEA,CAAC,EAAE,CAAC,CAAC;IACrBb,MAAM,CAACK,CAAC,GAAG,CAAC,CAAC,GAAGJ,KAAK,CAACK,CAAC;IACvBN,MAAM,CAACK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGJ,KAAK,CAACc,CAAC;IAC3Bf,MAAM,CAACK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGJ,KAAK,CAACe,CAAC;EAC7B;EAEApB,QAAQ,CAACqB,YAAY,CAAC,UAAU,EAAE,IAAIxB,KAAK,CAACyB,eAAe,CAACpB,SAAS,EAAE,CAAC,CAAC,CAAC;EAC1EF,QAAQ,CAACqB,YAAY,CAAC,OAAO,EAAE,IAAIxB,KAAK,CAACyB,eAAe,CAAClB,MAAM,EAAE,CAAC,CAAC,CAAC;EAEpE,MAAMmB,QAAQ,GAAG,IAAI1B,KAAK,CAAC2B,cAAc,CAAC;IAAEC,IAAI,EAAE,CAAC;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;EAC1E,OAAO,IAAI7B,KAAK,CAAC8B,MAAM,CAAC3B,QAAQ,EAAEuB,QAAQ,CAAC;AAC7C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
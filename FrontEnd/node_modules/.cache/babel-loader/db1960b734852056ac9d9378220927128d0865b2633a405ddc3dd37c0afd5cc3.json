{"ast":null,"code":"var _jsxFileName = \"/Users/cellia/Desktop/bigbang/FrontEnd/src/components/ParticleCanvas.jsx\",\n  _s = $RefreshSig$();\n// src/components/ParticleCanvas.jsx\nimport { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { CSS2DRenderer } from \"three/examples/jsm/renderers/CSS2DRenderer\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { createSun, createPlanets } from \"../utils/solarSystem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ParticleCanvas({\n  stage: serverStage,\n  status,\n  startSimulation,\n  pauseSimulation\n}) {\n  _s();\n  const mountRef = useRef();\n  const [localStage, setLocalStage] = useState(serverStage || \"bigbang\");\n\n  // 서버 stage가 바뀌면 동기화\n  useEffect(() => {\n    if (serverStage) setLocalStage(serverStage);\n  }, [serverStage]);\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 5000);\n    camera.position.z = 600;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = \"absolute\";\n    labelRenderer.domElement.style.top = \"0\";\n    mount.appendChild(labelRenderer.domElement);\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    controls.enableDamping = true;\n    controls.enablePan = false;\n    const pointLight = new THREE.PointLight(0xffffff, 3, 5000);\n    pointLight.position.set(0, 0, 0);\n    scene.add(pointLight);\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\n    scene.add(ambientLight);\n    let points = null;\n    let sun = null;\n    let planets = [];\n    const setupStage = () => {\n      // 이전 오브젝트 제거\n      const removable = scene.children.filter(obj => obj.userData.isPlanet || obj.userData.isSun || obj.userData.isOrbit || obj.userData.isBigBang || obj.userData.isGalaxy);\n      removable.forEach(obj => scene.remove(obj));\n      points = null;\n      sun = null;\n      planets = [];\n      if (localStage === \"bigbang\" || localStage === \"atom_formation\") {\n        const numParticles = 8000;\n        const geometry = new THREE.BufferGeometry();\n        const positions = new Float32Array(numParticles * 3);\n        const colors = new Float32Array(numParticles * 3);\n        const color = new THREE.Color();\n        for (let i = 0; i < numParticles; i++) {\n          positions[i * 3] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 1] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 2] = (Math.random() - 0.5) * 800;\n          const c = Math.random();\n          color.setRGB(c, c, c);\n          colors[i * 3] = color.r;\n          colors[i * 3 + 1] = color.g;\n          colors[i * 3 + 2] = color.b;\n        }\n        geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n        geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n        points = new THREE.Points(geometry, new THREE.PointsMaterial({\n          size: 2,\n          vertexColors: true\n        }));\n        points.userData.isBigBang = true;\n        scene.add(points);\n      }\n      if (localStage === \"galaxy_formation\") {\n        const {\n          generateGalaxy\n        } = require(\"../utils/galaxyUtils\");\n        points = generateGalaxy(5000);\n        points.userData.isGalaxy = true;\n        scene.add(points);\n      }\n      if (localStage === \"solar_system\") {\n        sun = createSun();\n        scene.add(sun);\n        planets = createPlanets(scene);\n      }\n    };\n    setupStage();\n    let frameId;\n    const animate = () => {\n      if (status !== \"paused\") {\n        if (localStage === \"solar_system\" && sun) {\n          sun.rotation.y += 0.002;\n          planets.forEach(p => {\n            p.angle += p.speed;\n            p.mesh.position.x = p.radius * Math.cos(p.angle);\n            p.mesh.position.z = p.radius * Math.sin(p.angle);\n          });\n        } else if (points) {\n          points.rotation.z += 0.001;\n        }\n      }\n      controls.update();\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n      frameId = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => {\n      cancelAnimationFrame(frameId);\n      renderer.dispose();\n      mount.removeChild(renderer.domElement);\n      mount.removeChild(labelRenderer.domElement);\n    };\n  }, [localStage, status]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"600px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 10,\n        left: 10,\n        zIndex: 10,\n        display: \"flex\",\n        gap: \"8px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSimulation,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pauseSimulation,\n        children: status === \"paused\" ? \"Resume\" : \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setLocalStage(\"bigbang\"),\n        children: \"BigBang\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setLocalStage(\"galaxy_formation\"),\n        children: \"Galaxy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setLocalStage(\"solar_system\"),\n        children: \"SolarSystem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleCanvas, \"/wPBgo9aJBL3DoKokws1I4VAPr0=\");\n_c = ParticleCanvas;\nvar _c;\n$RefreshReg$(_c, \"ParticleCanvas\");","map":{"version":3,"names":["useRef","useEffect","useState","THREE","CSS2DRenderer","OrbitControls","createSun","createPlanets","jsxDEV","_jsxDEV","ParticleCanvas","stage","serverStage","status","startSimulation","pauseSimulation","_s","mountRef","localStage","setLocalStage","mount","current","width","clientWidth","height","clientHeight","scene","Scene","background","Color","camera","PerspectiveCamera","position","z","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","labelRenderer","style","top","controls","enableDamping","enablePan","pointLight","PointLight","set","add","ambientLight","AmbientLight","points","sun","planets","setupStage","removable","children","filter","obj","userData","isPlanet","isSun","isOrbit","isBigBang","isGalaxy","forEach","remove","numParticles","geometry","BufferGeometry","positions","Float32Array","colors","color","i","Math","random","c","setRGB","r","g","b","setAttribute","BufferAttribute","Points","PointsMaterial","size","vertexColors","generateGalaxy","require","frameId","animate","rotation","y","p","angle","speed","mesh","x","radius","cos","sin","update","render","requestAnimationFrame","cancelAnimationFrame","dispose","removeChild","ref","fileName","_jsxFileName","lineNumber","columnNumber","left","zIndex","display","gap","onClick","_c","$RefreshReg$"],"sources":["/Users/cellia/Desktop/bigbang/FrontEnd/src/components/ParticleCanvas.jsx"],"sourcesContent":["// src/components/ParticleCanvas.jsx\nimport { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { CSS2DRenderer } from \"three/examples/jsm/renderers/CSS2DRenderer\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { createSun, createPlanets } from \"../utils/solarSystem\";\n\nexport default function ParticleCanvas({ stage: serverStage, status, startSimulation, pauseSimulation }) {\n  const mountRef = useRef();\n  const [localStage, setLocalStage] = useState(serverStage || \"bigbang\");\n\n  // 서버 stage가 바뀌면 동기화\n  useEffect(() => {\n    if (serverStage) setLocalStage(serverStage);\n  }, [serverStage]);\n\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 5000);\n    camera.position.z = 600;\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = \"absolute\";\n    labelRenderer.domElement.style.top = \"0\";\n    mount.appendChild(labelRenderer.domElement);\n\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    controls.enableDamping = true;\n    controls.enablePan = false;\n\n    const pointLight = new THREE.PointLight(0xffffff, 3, 5000);\n    pointLight.position.set(0, 0, 0);\n    scene.add(pointLight);\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\n    scene.add(ambientLight);\n\n    let points = null;\n    let sun = null;\n    let planets = [];\n\n    const setupStage = () => {\n      // 이전 오브젝트 제거\n      const removable = scene.children.filter(\n        obj =>\n          obj.userData.isPlanet ||\n          obj.userData.isSun ||\n          obj.userData.isOrbit ||\n          obj.userData.isBigBang ||\n          obj.userData.isGalaxy\n      );\n      removable.forEach(obj => scene.remove(obj));\n\n      points = null;\n      sun = null;\n      planets = [];\n\n      if (localStage === \"bigbang\" || localStage === \"atom_formation\") {\n        const numParticles = 8000;\n        const geometry = new THREE.BufferGeometry();\n        const positions = new Float32Array(numParticles * 3);\n        const colors = new Float32Array(numParticles * 3);\n        const color = new THREE.Color();\n\n        for (let i = 0; i < numParticles; i++) {\n          positions[i * 3] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 1] = (Math.random() - 0.5) * 800;\n          positions[i * 3 + 2] = (Math.random() - 0.5) * 800;\n          const c = Math.random();\n          color.setRGB(c, c, c);\n          colors[i * 3] = color.r;\n          colors[i * 3 + 1] = color.g;\n          colors[i * 3 + 2] = color.b;\n        }\n\n        geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n        geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3));\n\n        points = new THREE.Points(\n          geometry,\n          new THREE.PointsMaterial({ size: 2, vertexColors: true })\n        );\n        points.userData.isBigBang = true;\n        scene.add(points);\n      }\n\n      if (localStage === \"galaxy_formation\") {\n        const { generateGalaxy } = require(\"../utils/galaxyUtils\");\n        points = generateGalaxy(5000);\n        points.userData.isGalaxy = true;\n        scene.add(points);\n      }\n\n      if (localStage === \"solar_system\") {\n        sun = createSun();\n        scene.add(sun);\n        planets = createPlanets(scene);\n      }\n    };\n\n    setupStage();\n\n    let frameId;\n    const animate = () => {\n      if (status !== \"paused\") {\n        if (localStage === \"solar_system\" && sun) {\n          sun.rotation.y += 0.002;\n          planets.forEach(p => {\n            p.angle += p.speed;\n            p.mesh.position.x = p.radius * Math.cos(p.angle);\n            p.mesh.position.z = p.radius * Math.sin(p.angle);\n          });\n        } else if (points) {\n          points.rotation.z += 0.001;\n        }\n      }\n\n      controls.update();\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n      frameId = requestAnimationFrame(animate);\n    };\n    animate();\n\n    return () => {\n      cancelAnimationFrame(frameId);\n      renderer.dispose();\n      mount.removeChild(renderer.domElement);\n      mount.removeChild(labelRenderer.domElement);\n    };\n  }, [localStage, status]);\n\n  return (\n    <div style={{ position: \"relative\", width: \"100%\", height: \"600px\" }}>\n      <div ref={mountRef} style={{ width: \"100%\", height: \"100%\" }} />\n      <div\n        style={{\n          position: \"absolute\",\n          top: 10,\n          left: 10,\n          zIndex: 10,\n          display: \"flex\",\n          gap: \"8px\",\n        }}\n      >\n        <button onClick={startSimulation}>Start</button>\n        <button onClick={pauseSimulation}>\n          {status === \"paused\" ? \"Resume\" : \"Pause\"}\n        </button>\n        <button onClick={() => setLocalStage(\"bigbang\")}>BigBang</button>\n        <button onClick={() => setLocalStage(\"galaxy_formation\")}>Galaxy</button>\n        <button onClick={() => setLocalStage(\"solar_system\")}>SolarSystem</button>\n      </div>\n    </div>\n  );\n}"],"mappings":";;AAAA;AACA,SAASA,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,SAASC,aAAa,QAAQ,2CAA2C;AACzE,SAASC,SAAS,EAAEC,aAAa,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,eAAe,SAASC,cAAcA,CAAC;EAAEC,KAAK,EAAEC,WAAW;EAAEC,MAAM;EAAEC,eAAe;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACvG,MAAMC,QAAQ,GAAGjB,MAAM,CAAC,CAAC;EACzB,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAACU,WAAW,IAAI,SAAS,CAAC;;EAEtE;EACAX,SAAS,CAAC,MAAM;IACd,IAAIW,WAAW,EAAEO,aAAa,CAACP,WAAW,CAAC;EAC7C,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjBX,SAAS,CAAC,MAAM;IACd,MAAMmB,KAAK,GAAGH,QAAQ,CAACI,OAAO;IAC9B,IAAI,CAACD,KAAK,EAAE;IAEZ,MAAME,KAAK,GAAGF,KAAK,CAACG,WAAW;IAC/B,MAAMC,MAAM,GAAGJ,KAAK,CAACK,YAAY;IAEjC,MAAMC,KAAK,GAAG,IAAIvB,KAAK,CAACwB,KAAK,CAAC,CAAC;IAC/BD,KAAK,CAACE,UAAU,GAAG,IAAIzB,KAAK,CAAC0B,KAAK,CAAC,QAAQ,CAAC;IAE5C,MAAMC,MAAM,GAAG,IAAI3B,KAAK,CAAC4B,iBAAiB,CAAC,EAAE,EAAET,KAAK,GAAGE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC;IACzEM,MAAM,CAACE,QAAQ,CAACC,CAAC,GAAG,GAAG;IAEvB,MAAMC,QAAQ,GAAG,IAAI/B,KAAK,CAACgC,aAAa,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAC7DF,QAAQ,CAACG,OAAO,CAACf,KAAK,EAAEE,MAAM,CAAC;IAC/BJ,KAAK,CAACkB,WAAW,CAACJ,QAAQ,CAACK,UAAU,CAAC;IAEtC,MAAMC,aAAa,GAAG,IAAIpC,aAAa,CAAC,CAAC;IACzCoC,aAAa,CAACH,OAAO,CAACf,KAAK,EAAEE,MAAM,CAAC;IACpCgB,aAAa,CAACD,UAAU,CAACE,KAAK,CAACT,QAAQ,GAAG,UAAU;IACpDQ,aAAa,CAACD,UAAU,CAACE,KAAK,CAACC,GAAG,GAAG,GAAG;IACxCtB,KAAK,CAACkB,WAAW,CAACE,aAAa,CAACD,UAAU,CAAC;IAE3C,MAAMI,QAAQ,GAAG,IAAItC,aAAa,CAACyB,MAAM,EAAEU,aAAa,CAACD,UAAU,CAAC;IACpEI,QAAQ,CAACC,aAAa,GAAG,IAAI;IAC7BD,QAAQ,CAACE,SAAS,GAAG,KAAK;IAE1B,MAAMC,UAAU,GAAG,IAAI3C,KAAK,CAAC4C,UAAU,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC;IAC1DD,UAAU,CAACd,QAAQ,CAACgB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAChCtB,KAAK,CAACuB,GAAG,CAACH,UAAU,CAAC;IAErB,MAAMI,YAAY,GAAG,IAAI/C,KAAK,CAACgD,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC;IAC1DzB,KAAK,CAACuB,GAAG,CAACC,YAAY,CAAC;IAEvB,IAAIE,MAAM,GAAG,IAAI;IACjB,IAAIC,GAAG,GAAG,IAAI;IACd,IAAIC,OAAO,GAAG,EAAE;IAEhB,MAAMC,UAAU,GAAGA,CAAA,KAAM;MACvB;MACA,MAAMC,SAAS,GAAG9B,KAAK,CAAC+B,QAAQ,CAACC,MAAM,CACrCC,GAAG,IACDA,GAAG,CAACC,QAAQ,CAACC,QAAQ,IACrBF,GAAG,CAACC,QAAQ,CAACE,KAAK,IAClBH,GAAG,CAACC,QAAQ,CAACG,OAAO,IACpBJ,GAAG,CAACC,QAAQ,CAACI,SAAS,IACtBL,GAAG,CAACC,QAAQ,CAACK,QACjB,CAAC;MACDT,SAAS,CAACU,OAAO,CAACP,GAAG,IAAIjC,KAAK,CAACyC,MAAM,CAACR,GAAG,CAAC,CAAC;MAE3CP,MAAM,GAAG,IAAI;MACbC,GAAG,GAAG,IAAI;MACVC,OAAO,GAAG,EAAE;MAEZ,IAAIpC,UAAU,KAAK,SAAS,IAAIA,UAAU,KAAK,gBAAgB,EAAE;QAC/D,MAAMkD,YAAY,GAAG,IAAI;QACzB,MAAMC,QAAQ,GAAG,IAAIlE,KAAK,CAACmE,cAAc,CAAC,CAAC;QAC3C,MAAMC,SAAS,GAAG,IAAIC,YAAY,CAACJ,YAAY,GAAG,CAAC,CAAC;QACpD,MAAMK,MAAM,GAAG,IAAID,YAAY,CAACJ,YAAY,GAAG,CAAC,CAAC;QACjD,MAAMM,KAAK,GAAG,IAAIvE,KAAK,CAAC0B,KAAK,CAAC,CAAC;QAE/B,KAAK,IAAI8C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,YAAY,EAAEO,CAAC,EAAE,EAAE;UACrCJ,SAAS,CAACI,CAAC,GAAG,CAAC,CAAC,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG;UAC9CN,SAAS,CAACI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG;UAClDN,SAAS,CAACI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG;UAClD,MAAMC,CAAC,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC;UACvBH,KAAK,CAACK,MAAM,CAACD,CAAC,EAAEA,CAAC,EAAEA,CAAC,CAAC;UACrBL,MAAM,CAACE,CAAC,GAAG,CAAC,CAAC,GAAGD,KAAK,CAACM,CAAC;UACvBP,MAAM,CAACE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGD,KAAK,CAACO,CAAC;UAC3BR,MAAM,CAACE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGD,KAAK,CAACQ,CAAC;QAC7B;QAEAb,QAAQ,CAACc,YAAY,CAAC,UAAU,EAAE,IAAIhF,KAAK,CAACiF,eAAe,CAACb,SAAS,EAAE,CAAC,CAAC,CAAC;QAC1EF,QAAQ,CAACc,YAAY,CAAC,OAAO,EAAE,IAAIhF,KAAK,CAACiF,eAAe,CAACX,MAAM,EAAE,CAAC,CAAC,CAAC;QAEpErB,MAAM,GAAG,IAAIjD,KAAK,CAACkF,MAAM,CACvBhB,QAAQ,EACR,IAAIlE,KAAK,CAACmF,cAAc,CAAC;UAAEC,IAAI,EAAE,CAAC;UAAEC,YAAY,EAAE;QAAK,CAAC,CAC1D,CAAC;QACDpC,MAAM,CAACQ,QAAQ,CAACI,SAAS,GAAG,IAAI;QAChCtC,KAAK,CAACuB,GAAG,CAACG,MAAM,CAAC;MACnB;MAEA,IAAIlC,UAAU,KAAK,kBAAkB,EAAE;QACrC,MAAM;UAAEuE;QAAe,CAAC,GAAGC,OAAO,CAAC,sBAAsB,CAAC;QAC1DtC,MAAM,GAAGqC,cAAc,CAAC,IAAI,CAAC;QAC7BrC,MAAM,CAACQ,QAAQ,CAACK,QAAQ,GAAG,IAAI;QAC/BvC,KAAK,CAACuB,GAAG,CAACG,MAAM,CAAC;MACnB;MAEA,IAAIlC,UAAU,KAAK,cAAc,EAAE;QACjCmC,GAAG,GAAG/C,SAAS,CAAC,CAAC;QACjBoB,KAAK,CAACuB,GAAG,CAACI,GAAG,CAAC;QACdC,OAAO,GAAG/C,aAAa,CAACmB,KAAK,CAAC;MAChC;IACF,CAAC;IAED6B,UAAU,CAAC,CAAC;IAEZ,IAAIoC,OAAO;IACX,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpB,IAAI/E,MAAM,KAAK,QAAQ,EAAE;QACvB,IAAIK,UAAU,KAAK,cAAc,IAAImC,GAAG,EAAE;UACxCA,GAAG,CAACwC,QAAQ,CAACC,CAAC,IAAI,KAAK;UACvBxC,OAAO,CAACY,OAAO,CAAC6B,CAAC,IAAI;YACnBA,CAAC,CAACC,KAAK,IAAID,CAAC,CAACE,KAAK;YAClBF,CAAC,CAACG,IAAI,CAAClE,QAAQ,CAACmE,CAAC,GAAGJ,CAAC,CAACK,MAAM,GAAGxB,IAAI,CAACyB,GAAG,CAACN,CAAC,CAACC,KAAK,CAAC;YAChDD,CAAC,CAACG,IAAI,CAAClE,QAAQ,CAACC,CAAC,GAAG8D,CAAC,CAACK,MAAM,GAAGxB,IAAI,CAAC0B,GAAG,CAACP,CAAC,CAACC,KAAK,CAAC;UAClD,CAAC,CAAC;QACJ,CAAC,MAAM,IAAI5C,MAAM,EAAE;UACjBA,MAAM,CAACyC,QAAQ,CAAC5D,CAAC,IAAI,KAAK;QAC5B;MACF;MAEAU,QAAQ,CAAC4D,MAAM,CAAC,CAAC;MACjBrE,QAAQ,CAACsE,MAAM,CAAC9E,KAAK,EAAEI,MAAM,CAAC;MAC9BU,aAAa,CAACgE,MAAM,CAAC9E,KAAK,EAAEI,MAAM,CAAC;MACnC6D,OAAO,GAAGc,qBAAqB,CAACb,OAAO,CAAC;IAC1C,CAAC;IACDA,OAAO,CAAC,CAAC;IAET,OAAO,MAAM;MACXc,oBAAoB,CAACf,OAAO,CAAC;MAC7BzD,QAAQ,CAACyE,OAAO,CAAC,CAAC;MAClBvF,KAAK,CAACwF,WAAW,CAAC1E,QAAQ,CAACK,UAAU,CAAC;MACtCnB,KAAK,CAACwF,WAAW,CAACpE,aAAa,CAACD,UAAU,CAAC;IAC7C,CAAC;EACH,CAAC,EAAE,CAACrB,UAAU,EAAEL,MAAM,CAAC,CAAC;EAExB,oBACEJ,OAAA;IAAKgC,KAAK,EAAE;MAAET,QAAQ,EAAE,UAAU;MAAEV,KAAK,EAAE,MAAM;MAAEE,MAAM,EAAE;IAAQ,CAAE;IAAAiC,QAAA,gBACnEhD,OAAA;MAAKoG,GAAG,EAAE5F,QAAS;MAACwB,KAAK,EAAE;QAAEnB,KAAK,EAAE,MAAM;QAAEE,MAAM,EAAE;MAAO;IAAE;MAAAsF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChExG,OAAA;MACEgC,KAAK,EAAE;QACLT,QAAQ,EAAE,UAAU;QACpBU,GAAG,EAAE,EAAE;QACPwE,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,EAAE;QACVC,OAAO,EAAE,MAAM;QACfC,GAAG,EAAE;MACP,CAAE;MAAA5D,QAAA,gBAEFhD,OAAA;QAAQ6G,OAAO,EAAExG,eAAgB;QAAA2C,QAAA,EAAC;MAAK;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChDxG,OAAA;QAAQ6G,OAAO,EAAEvG,eAAgB;QAAA0C,QAAA,EAC9B5C,MAAM,KAAK,QAAQ,GAAG,QAAQ,GAAG;MAAO;QAAAiG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACTxG,OAAA;QAAQ6G,OAAO,EAAEA,CAAA,KAAMnG,aAAa,CAAC,SAAS,CAAE;QAAAsC,QAAA,EAAC;MAAO;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjExG,OAAA;QAAQ6G,OAAO,EAAEA,CAAA,KAAMnG,aAAa,CAAC,kBAAkB,CAAE;QAAAsC,QAAA,EAAC;MAAM;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzExG,OAAA;QAAQ6G,OAAO,EAAEA,CAAA,KAAMnG,aAAa,CAAC,cAAc,CAAE;QAAAsC,QAAA,EAAC;MAAW;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjG,EAAA,CAjKuBN,cAAc;AAAA6G,EAAA,GAAd7G,cAAc;AAAA,IAAA6G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}